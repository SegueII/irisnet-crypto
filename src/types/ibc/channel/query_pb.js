// source: ibc/channel/query.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var ibc_client_client_pb = require('../../ibc/client/client_pb.js');
goog.object.extend(proto, ibc_client_client_pb);
var cosmos_base_query_v1beta1_pagination_pb = require('../../cosmos/base/query/v1beta1/pagination_pb.js');
goog.object.extend(proto, cosmos_base_query_v1beta1_pagination_pb);
var ibc_channel_channel_pb = require('../../ibc/channel/channel_pb.js');
goog.object.extend(proto, ibc_channel_channel_pb);
var google_api_annotations_pb = require('../../google/api/annotations_pb.js');
goog.object.extend(proto, google_api_annotations_pb);
var google_protobuf_any_pb = require('google-protobuf/google/protobuf/any_pb.js');
goog.object.extend(proto, google_protobuf_any_pb);
var gogoproto_gogo_pb = require('../../gogoproto/gogo_pb.js');
goog.object.extend(proto, gogoproto_gogo_pb);
goog.exportSymbol('proto.ibc.channel.QueryChannelClientStateRequest', null, global);
goog.exportSymbol('proto.ibc.channel.QueryChannelClientStateResponse', null, global);
goog.exportSymbol('proto.ibc.channel.QueryChannelConsensusStateRequest', null, global);
goog.exportSymbol('proto.ibc.channel.QueryChannelConsensusStateResponse', null, global);
goog.exportSymbol('proto.ibc.channel.QueryChannelRequest', null, global);
goog.exportSymbol('proto.ibc.channel.QueryChannelResponse', null, global);
goog.exportSymbol('proto.ibc.channel.QueryChannelsRequest', null, global);
goog.exportSymbol('proto.ibc.channel.QueryChannelsResponse', null, global);
goog.exportSymbol('proto.ibc.channel.QueryConnectionChannelsRequest', null, global);
goog.exportSymbol('proto.ibc.channel.QueryConnectionChannelsResponse', null, global);
goog.exportSymbol('proto.ibc.channel.QueryNextSequenceReceiveRequest', null, global);
goog.exportSymbol('proto.ibc.channel.QueryNextSequenceReceiveResponse', null, global);
goog.exportSymbol('proto.ibc.channel.QueryPacketAcknowledgementRequest', null, global);
goog.exportSymbol('proto.ibc.channel.QueryPacketAcknowledgementResponse', null, global);
goog.exportSymbol('proto.ibc.channel.QueryPacketCommitmentRequest', null, global);
goog.exportSymbol('proto.ibc.channel.QueryPacketCommitmentResponse', null, global);
goog.exportSymbol('proto.ibc.channel.QueryPacketCommitmentsRequest', null, global);
goog.exportSymbol('proto.ibc.channel.QueryPacketCommitmentsResponse', null, global);
goog.exportSymbol('proto.ibc.channel.QueryUnrelayedPacketsRequest', null, global);
goog.exportSymbol('proto.ibc.channel.QueryUnrelayedPacketsResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ibc.channel.QueryChannelRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ibc.channel.QueryChannelRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ibc.channel.QueryChannelRequest.displayName = 'proto.ibc.channel.QueryChannelRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ibc.channel.QueryChannelResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ibc.channel.QueryChannelResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ibc.channel.QueryChannelResponse.displayName = 'proto.ibc.channel.QueryChannelResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ibc.channel.QueryChannelsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ibc.channel.QueryChannelsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ibc.channel.QueryChannelsRequest.displayName = 'proto.ibc.channel.QueryChannelsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ibc.channel.QueryChannelsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ibc.channel.QueryChannelsResponse.repeatedFields_, null);
};
goog.inherits(proto.ibc.channel.QueryChannelsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ibc.channel.QueryChannelsResponse.displayName = 'proto.ibc.channel.QueryChannelsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ibc.channel.QueryConnectionChannelsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ibc.channel.QueryConnectionChannelsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ibc.channel.QueryConnectionChannelsRequest.displayName = 'proto.ibc.channel.QueryConnectionChannelsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ibc.channel.QueryConnectionChannelsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ibc.channel.QueryConnectionChannelsResponse.repeatedFields_, null);
};
goog.inherits(proto.ibc.channel.QueryConnectionChannelsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ibc.channel.QueryConnectionChannelsResponse.displayName = 'proto.ibc.channel.QueryConnectionChannelsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ibc.channel.QueryChannelClientStateRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ibc.channel.QueryChannelClientStateRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ibc.channel.QueryChannelClientStateRequest.displayName = 'proto.ibc.channel.QueryChannelClientStateRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ibc.channel.QueryChannelClientStateResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ibc.channel.QueryChannelClientStateResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ibc.channel.QueryChannelClientStateResponse.displayName = 'proto.ibc.channel.QueryChannelClientStateResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ibc.channel.QueryChannelConsensusStateRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ibc.channel.QueryChannelConsensusStateRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ibc.channel.QueryChannelConsensusStateRequest.displayName = 'proto.ibc.channel.QueryChannelConsensusStateRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ibc.channel.QueryChannelConsensusStateResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ibc.channel.QueryChannelConsensusStateResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ibc.channel.QueryChannelConsensusStateResponse.displayName = 'proto.ibc.channel.QueryChannelConsensusStateResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ibc.channel.QueryPacketCommitmentRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ibc.channel.QueryPacketCommitmentRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ibc.channel.QueryPacketCommitmentRequest.displayName = 'proto.ibc.channel.QueryPacketCommitmentRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ibc.channel.QueryPacketCommitmentResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ibc.channel.QueryPacketCommitmentResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ibc.channel.QueryPacketCommitmentResponse.displayName = 'proto.ibc.channel.QueryPacketCommitmentResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ibc.channel.QueryPacketCommitmentsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ibc.channel.QueryPacketCommitmentsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ibc.channel.QueryPacketCommitmentsRequest.displayName = 'proto.ibc.channel.QueryPacketCommitmentsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ibc.channel.QueryPacketCommitmentsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ibc.channel.QueryPacketCommitmentsResponse.repeatedFields_, null);
};
goog.inherits(proto.ibc.channel.QueryPacketCommitmentsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ibc.channel.QueryPacketCommitmentsResponse.displayName = 'proto.ibc.channel.QueryPacketCommitmentsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ibc.channel.QueryPacketAcknowledgementRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ibc.channel.QueryPacketAcknowledgementRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ibc.channel.QueryPacketAcknowledgementRequest.displayName = 'proto.ibc.channel.QueryPacketAcknowledgementRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ibc.channel.QueryPacketAcknowledgementResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ibc.channel.QueryPacketAcknowledgementResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ibc.channel.QueryPacketAcknowledgementResponse.displayName = 'proto.ibc.channel.QueryPacketAcknowledgementResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ibc.channel.QueryUnrelayedPacketsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ibc.channel.QueryUnrelayedPacketsRequest.repeatedFields_, null);
};
goog.inherits(proto.ibc.channel.QueryUnrelayedPacketsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ibc.channel.QueryUnrelayedPacketsRequest.displayName = 'proto.ibc.channel.QueryUnrelayedPacketsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ibc.channel.QueryUnrelayedPacketsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ibc.channel.QueryUnrelayedPacketsResponse.repeatedFields_, null);
};
goog.inherits(proto.ibc.channel.QueryUnrelayedPacketsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ibc.channel.QueryUnrelayedPacketsResponse.displayName = 'proto.ibc.channel.QueryUnrelayedPacketsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ibc.channel.QueryNextSequenceReceiveRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ibc.channel.QueryNextSequenceReceiveRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ibc.channel.QueryNextSequenceReceiveRequest.displayName = 'proto.ibc.channel.QueryNextSequenceReceiveRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ibc.channel.QueryNextSequenceReceiveResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ibc.channel.QueryNextSequenceReceiveResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ibc.channel.QueryNextSequenceReceiveResponse.displayName = 'proto.ibc.channel.QueryNextSequenceReceiveResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ibc.channel.QueryChannelRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ibc.channel.QueryChannelRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ibc.channel.QueryChannelRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ibc.channel.QueryChannelRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    portId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    channelId: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ibc.channel.QueryChannelRequest}
 */
proto.ibc.channel.QueryChannelRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ibc.channel.QueryChannelRequest;
  return proto.ibc.channel.QueryChannelRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ibc.channel.QueryChannelRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ibc.channel.QueryChannelRequest}
 */
proto.ibc.channel.QueryChannelRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPortId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setChannelId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ibc.channel.QueryChannelRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ibc.channel.QueryChannelRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ibc.channel.QueryChannelRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ibc.channel.QueryChannelRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPortId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getChannelId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string port_id = 1;
 * @return {string}
 */
proto.ibc.channel.QueryChannelRequest.prototype.getPortId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ibc.channel.QueryChannelRequest} returns this
 */
proto.ibc.channel.QueryChannelRequest.prototype.setPortId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string channel_id = 2;
 * @return {string}
 */
proto.ibc.channel.QueryChannelRequest.prototype.getChannelId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ibc.channel.QueryChannelRequest} returns this
 */
proto.ibc.channel.QueryChannelRequest.prototype.setChannelId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ibc.channel.QueryChannelResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.ibc.channel.QueryChannelResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ibc.channel.QueryChannelResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ibc.channel.QueryChannelResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    channel: (f = msg.getChannel()) && ibc_channel_channel_pb.Channel.toObject(includeInstance, f),
    proof: msg.getProof_asB64(),
    proofPath: jspb.Message.getFieldWithDefault(msg, 3, ""),
    proofHeight: (f = msg.getProofHeight()) && ibc_client_client_pb.Height.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ibc.channel.QueryChannelResponse}
 */
proto.ibc.channel.QueryChannelResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ibc.channel.QueryChannelResponse;
  return proto.ibc.channel.QueryChannelResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ibc.channel.QueryChannelResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ibc.channel.QueryChannelResponse}
 */
proto.ibc.channel.QueryChannelResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new ibc_channel_channel_pb.Channel;
      reader.readMessage(value,ibc_channel_channel_pb.Channel.deserializeBinaryFromReader);
      msg.setChannel(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setProof(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setProofPath(value);
      break;
    case 4:
      var value = new ibc_client_client_pb.Height;
      reader.readMessage(value,ibc_client_client_pb.Height.deserializeBinaryFromReader);
      msg.setProofHeight(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ibc.channel.QueryChannelResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ibc.channel.QueryChannelResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ibc.channel.QueryChannelResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ibc.channel.QueryChannelResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getChannel();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      ibc_channel_channel_pb.Channel.serializeBinaryToWriter
    );
  }
  f = message.getProof_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
  f = message.getProofPath();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getProofHeight();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      ibc_client_client_pb.Height.serializeBinaryToWriter
    );
  }
};


/**
 * optional Channel channel = 1;
 * @return {?proto.ibc.channel.Channel}
 */
proto.ibc.channel.QueryChannelResponse.prototype.getChannel = function() {
  return /** @type{?proto.ibc.channel.Channel} */ (
    jspb.Message.getWrapperField(this, ibc_channel_channel_pb.Channel, 1));
};


/**
 * @param {?proto.ibc.channel.Channel|undefined} value
 * @return {!proto.ibc.channel.QueryChannelResponse} returns this
*/
proto.ibc.channel.QueryChannelResponse.prototype.setChannel = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ibc.channel.QueryChannelResponse} returns this
 */
proto.ibc.channel.QueryChannelResponse.prototype.clearChannel = function() {
  return this.setChannel(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ibc.channel.QueryChannelResponse.prototype.hasChannel = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional bytes proof = 2;
 * @return {!(string|Uint8Array)}
 */
proto.ibc.channel.QueryChannelResponse.prototype.getProof = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes proof = 2;
 * This is a type-conversion wrapper around `getProof()`
 * @return {string}
 */
proto.ibc.channel.QueryChannelResponse.prototype.getProof_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getProof()));
};


/**
 * optional bytes proof = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getProof()`
 * @return {!Uint8Array}
 */
proto.ibc.channel.QueryChannelResponse.prototype.getProof_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getProof()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.ibc.channel.QueryChannelResponse} returns this
 */
proto.ibc.channel.QueryChannelResponse.prototype.setProof = function(value) {
  return jspb.Message.setProto3BytesField(this, 2, value);
};


/**
 * optional string proof_path = 3;
 * @return {string}
 */
proto.ibc.channel.QueryChannelResponse.prototype.getProofPath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.ibc.channel.QueryChannelResponse} returns this
 */
proto.ibc.channel.QueryChannelResponse.prototype.setProofPath = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional ibc.client.Height proof_height = 4;
 * @return {?proto.ibc.client.Height}
 */
proto.ibc.channel.QueryChannelResponse.prototype.getProofHeight = function() {
  return /** @type{?proto.ibc.client.Height} */ (
    jspb.Message.getWrapperField(this, ibc_client_client_pb.Height, 4));
};


/**
 * @param {?proto.ibc.client.Height|undefined} value
 * @return {!proto.ibc.channel.QueryChannelResponse} returns this
*/
proto.ibc.channel.QueryChannelResponse.prototype.setProofHeight = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ibc.channel.QueryChannelResponse} returns this
 */
proto.ibc.channel.QueryChannelResponse.prototype.clearProofHeight = function() {
  return this.setProofHeight(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ibc.channel.QueryChannelResponse.prototype.hasProofHeight = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ibc.channel.QueryChannelsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ibc.channel.QueryChannelsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ibc.channel.QueryChannelsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ibc.channel.QueryChannelsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    pagination: (f = msg.getPagination()) && cosmos_base_query_v1beta1_pagination_pb.PageRequest.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ibc.channel.QueryChannelsRequest}
 */
proto.ibc.channel.QueryChannelsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ibc.channel.QueryChannelsRequest;
  return proto.ibc.channel.QueryChannelsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ibc.channel.QueryChannelsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ibc.channel.QueryChannelsRequest}
 */
proto.ibc.channel.QueryChannelsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new cosmos_base_query_v1beta1_pagination_pb.PageRequest;
      reader.readMessage(value,cosmos_base_query_v1beta1_pagination_pb.PageRequest.deserializeBinaryFromReader);
      msg.setPagination(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ibc.channel.QueryChannelsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ibc.channel.QueryChannelsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ibc.channel.QueryChannelsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ibc.channel.QueryChannelsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPagination();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      cosmos_base_query_v1beta1_pagination_pb.PageRequest.serializeBinaryToWriter
    );
  }
};


/**
 * optional cosmos.base.query.v1beta1.PageRequest pagination = 1;
 * @return {?proto.cosmos.base.query.v1beta1.PageRequest}
 */
proto.ibc.channel.QueryChannelsRequest.prototype.getPagination = function() {
  return /** @type{?proto.cosmos.base.query.v1beta1.PageRequest} */ (
    jspb.Message.getWrapperField(this, cosmos_base_query_v1beta1_pagination_pb.PageRequest, 1));
};


/**
 * @param {?proto.cosmos.base.query.v1beta1.PageRequest|undefined} value
 * @return {!proto.ibc.channel.QueryChannelsRequest} returns this
*/
proto.ibc.channel.QueryChannelsRequest.prototype.setPagination = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ibc.channel.QueryChannelsRequest} returns this
 */
proto.ibc.channel.QueryChannelsRequest.prototype.clearPagination = function() {
  return this.setPagination(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ibc.channel.QueryChannelsRequest.prototype.hasPagination = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ibc.channel.QueryChannelsResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ibc.channel.QueryChannelsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.ibc.channel.QueryChannelsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ibc.channel.QueryChannelsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ibc.channel.QueryChannelsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    channelsList: jspb.Message.toObjectList(msg.getChannelsList(),
    ibc_channel_channel_pb.IdentifiedChannel.toObject, includeInstance),
    pagination: (f = msg.getPagination()) && cosmos_base_query_v1beta1_pagination_pb.PageResponse.toObject(includeInstance, f),
    height: (f = msg.getHeight()) && ibc_client_client_pb.Height.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ibc.channel.QueryChannelsResponse}
 */
proto.ibc.channel.QueryChannelsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ibc.channel.QueryChannelsResponse;
  return proto.ibc.channel.QueryChannelsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ibc.channel.QueryChannelsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ibc.channel.QueryChannelsResponse}
 */
proto.ibc.channel.QueryChannelsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new ibc_channel_channel_pb.IdentifiedChannel;
      reader.readMessage(value,ibc_channel_channel_pb.IdentifiedChannel.deserializeBinaryFromReader);
      msg.addChannels(value);
      break;
    case 2:
      var value = new cosmos_base_query_v1beta1_pagination_pb.PageResponse;
      reader.readMessage(value,cosmos_base_query_v1beta1_pagination_pb.PageResponse.deserializeBinaryFromReader);
      msg.setPagination(value);
      break;
    case 3:
      var value = new ibc_client_client_pb.Height;
      reader.readMessage(value,ibc_client_client_pb.Height.deserializeBinaryFromReader);
      msg.setHeight(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ibc.channel.QueryChannelsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ibc.channel.QueryChannelsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ibc.channel.QueryChannelsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ibc.channel.QueryChannelsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getChannelsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      ibc_channel_channel_pb.IdentifiedChannel.serializeBinaryToWriter
    );
  }
  f = message.getPagination();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      cosmos_base_query_v1beta1_pagination_pb.PageResponse.serializeBinaryToWriter
    );
  }
  f = message.getHeight();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      ibc_client_client_pb.Height.serializeBinaryToWriter
    );
  }
};


/**
 * repeated IdentifiedChannel channels = 1;
 * @return {!Array<!proto.ibc.channel.IdentifiedChannel>}
 */
proto.ibc.channel.QueryChannelsResponse.prototype.getChannelsList = function() {
  return /** @type{!Array<!proto.ibc.channel.IdentifiedChannel>} */ (
    jspb.Message.getRepeatedWrapperField(this, ibc_channel_channel_pb.IdentifiedChannel, 1));
};


/**
 * @param {!Array<!proto.ibc.channel.IdentifiedChannel>} value
 * @return {!proto.ibc.channel.QueryChannelsResponse} returns this
*/
proto.ibc.channel.QueryChannelsResponse.prototype.setChannelsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.ibc.channel.IdentifiedChannel=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ibc.channel.IdentifiedChannel}
 */
proto.ibc.channel.QueryChannelsResponse.prototype.addChannels = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.ibc.channel.IdentifiedChannel, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ibc.channel.QueryChannelsResponse} returns this
 */
proto.ibc.channel.QueryChannelsResponse.prototype.clearChannelsList = function() {
  return this.setChannelsList([]);
};


/**
 * optional cosmos.base.query.v1beta1.PageResponse pagination = 2;
 * @return {?proto.cosmos.base.query.v1beta1.PageResponse}
 */
proto.ibc.channel.QueryChannelsResponse.prototype.getPagination = function() {
  return /** @type{?proto.cosmos.base.query.v1beta1.PageResponse} */ (
    jspb.Message.getWrapperField(this, cosmos_base_query_v1beta1_pagination_pb.PageResponse, 2));
};


/**
 * @param {?proto.cosmos.base.query.v1beta1.PageResponse|undefined} value
 * @return {!proto.ibc.channel.QueryChannelsResponse} returns this
*/
proto.ibc.channel.QueryChannelsResponse.prototype.setPagination = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ibc.channel.QueryChannelsResponse} returns this
 */
proto.ibc.channel.QueryChannelsResponse.prototype.clearPagination = function() {
  return this.setPagination(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ibc.channel.QueryChannelsResponse.prototype.hasPagination = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional ibc.client.Height height = 3;
 * @return {?proto.ibc.client.Height}
 */
proto.ibc.channel.QueryChannelsResponse.prototype.getHeight = function() {
  return /** @type{?proto.ibc.client.Height} */ (
    jspb.Message.getWrapperField(this, ibc_client_client_pb.Height, 3));
};


/**
 * @param {?proto.ibc.client.Height|undefined} value
 * @return {!proto.ibc.channel.QueryChannelsResponse} returns this
*/
proto.ibc.channel.QueryChannelsResponse.prototype.setHeight = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ibc.channel.QueryChannelsResponse} returns this
 */
proto.ibc.channel.QueryChannelsResponse.prototype.clearHeight = function() {
  return this.setHeight(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ibc.channel.QueryChannelsResponse.prototype.hasHeight = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ibc.channel.QueryConnectionChannelsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ibc.channel.QueryConnectionChannelsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ibc.channel.QueryConnectionChannelsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ibc.channel.QueryConnectionChannelsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    connection: jspb.Message.getFieldWithDefault(msg, 1, ""),
    pagination: (f = msg.getPagination()) && cosmos_base_query_v1beta1_pagination_pb.PageRequest.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ibc.channel.QueryConnectionChannelsRequest}
 */
proto.ibc.channel.QueryConnectionChannelsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ibc.channel.QueryConnectionChannelsRequest;
  return proto.ibc.channel.QueryConnectionChannelsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ibc.channel.QueryConnectionChannelsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ibc.channel.QueryConnectionChannelsRequest}
 */
proto.ibc.channel.QueryConnectionChannelsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setConnection(value);
      break;
    case 2:
      var value = new cosmos_base_query_v1beta1_pagination_pb.PageRequest;
      reader.readMessage(value,cosmos_base_query_v1beta1_pagination_pb.PageRequest.deserializeBinaryFromReader);
      msg.setPagination(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ibc.channel.QueryConnectionChannelsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ibc.channel.QueryConnectionChannelsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ibc.channel.QueryConnectionChannelsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ibc.channel.QueryConnectionChannelsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConnection();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPagination();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      cosmos_base_query_v1beta1_pagination_pb.PageRequest.serializeBinaryToWriter
    );
  }
};


/**
 * optional string connection = 1;
 * @return {string}
 */
proto.ibc.channel.QueryConnectionChannelsRequest.prototype.getConnection = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ibc.channel.QueryConnectionChannelsRequest} returns this
 */
proto.ibc.channel.QueryConnectionChannelsRequest.prototype.setConnection = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional cosmos.base.query.v1beta1.PageRequest pagination = 2;
 * @return {?proto.cosmos.base.query.v1beta1.PageRequest}
 */
proto.ibc.channel.QueryConnectionChannelsRequest.prototype.getPagination = function() {
  return /** @type{?proto.cosmos.base.query.v1beta1.PageRequest} */ (
    jspb.Message.getWrapperField(this, cosmos_base_query_v1beta1_pagination_pb.PageRequest, 2));
};


/**
 * @param {?proto.cosmos.base.query.v1beta1.PageRequest|undefined} value
 * @return {!proto.ibc.channel.QueryConnectionChannelsRequest} returns this
*/
proto.ibc.channel.QueryConnectionChannelsRequest.prototype.setPagination = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ibc.channel.QueryConnectionChannelsRequest} returns this
 */
proto.ibc.channel.QueryConnectionChannelsRequest.prototype.clearPagination = function() {
  return this.setPagination(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ibc.channel.QueryConnectionChannelsRequest.prototype.hasPagination = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ibc.channel.QueryConnectionChannelsResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ibc.channel.QueryConnectionChannelsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.ibc.channel.QueryConnectionChannelsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ibc.channel.QueryConnectionChannelsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ibc.channel.QueryConnectionChannelsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    channelsList: jspb.Message.toObjectList(msg.getChannelsList(),
    ibc_channel_channel_pb.IdentifiedChannel.toObject, includeInstance),
    pagination: (f = msg.getPagination()) && cosmos_base_query_v1beta1_pagination_pb.PageResponse.toObject(includeInstance, f),
    height: (f = msg.getHeight()) && ibc_client_client_pb.Height.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ibc.channel.QueryConnectionChannelsResponse}
 */
proto.ibc.channel.QueryConnectionChannelsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ibc.channel.QueryConnectionChannelsResponse;
  return proto.ibc.channel.QueryConnectionChannelsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ibc.channel.QueryConnectionChannelsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ibc.channel.QueryConnectionChannelsResponse}
 */
proto.ibc.channel.QueryConnectionChannelsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new ibc_channel_channel_pb.IdentifiedChannel;
      reader.readMessage(value,ibc_channel_channel_pb.IdentifiedChannel.deserializeBinaryFromReader);
      msg.addChannels(value);
      break;
    case 2:
      var value = new cosmos_base_query_v1beta1_pagination_pb.PageResponse;
      reader.readMessage(value,cosmos_base_query_v1beta1_pagination_pb.PageResponse.deserializeBinaryFromReader);
      msg.setPagination(value);
      break;
    case 3:
      var value = new ibc_client_client_pb.Height;
      reader.readMessage(value,ibc_client_client_pb.Height.deserializeBinaryFromReader);
      msg.setHeight(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ibc.channel.QueryConnectionChannelsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ibc.channel.QueryConnectionChannelsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ibc.channel.QueryConnectionChannelsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ibc.channel.QueryConnectionChannelsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getChannelsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      ibc_channel_channel_pb.IdentifiedChannel.serializeBinaryToWriter
    );
  }
  f = message.getPagination();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      cosmos_base_query_v1beta1_pagination_pb.PageResponse.serializeBinaryToWriter
    );
  }
  f = message.getHeight();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      ibc_client_client_pb.Height.serializeBinaryToWriter
    );
  }
};


/**
 * repeated IdentifiedChannel channels = 1;
 * @return {!Array<!proto.ibc.channel.IdentifiedChannel>}
 */
proto.ibc.channel.QueryConnectionChannelsResponse.prototype.getChannelsList = function() {
  return /** @type{!Array<!proto.ibc.channel.IdentifiedChannel>} */ (
    jspb.Message.getRepeatedWrapperField(this, ibc_channel_channel_pb.IdentifiedChannel, 1));
};


/**
 * @param {!Array<!proto.ibc.channel.IdentifiedChannel>} value
 * @return {!proto.ibc.channel.QueryConnectionChannelsResponse} returns this
*/
proto.ibc.channel.QueryConnectionChannelsResponse.prototype.setChannelsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.ibc.channel.IdentifiedChannel=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ibc.channel.IdentifiedChannel}
 */
proto.ibc.channel.QueryConnectionChannelsResponse.prototype.addChannels = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.ibc.channel.IdentifiedChannel, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ibc.channel.QueryConnectionChannelsResponse} returns this
 */
proto.ibc.channel.QueryConnectionChannelsResponse.prototype.clearChannelsList = function() {
  return this.setChannelsList([]);
};


/**
 * optional cosmos.base.query.v1beta1.PageResponse pagination = 2;
 * @return {?proto.cosmos.base.query.v1beta1.PageResponse}
 */
proto.ibc.channel.QueryConnectionChannelsResponse.prototype.getPagination = function() {
  return /** @type{?proto.cosmos.base.query.v1beta1.PageResponse} */ (
    jspb.Message.getWrapperField(this, cosmos_base_query_v1beta1_pagination_pb.PageResponse, 2));
};


/**
 * @param {?proto.cosmos.base.query.v1beta1.PageResponse|undefined} value
 * @return {!proto.ibc.channel.QueryConnectionChannelsResponse} returns this
*/
proto.ibc.channel.QueryConnectionChannelsResponse.prototype.setPagination = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ibc.channel.QueryConnectionChannelsResponse} returns this
 */
proto.ibc.channel.QueryConnectionChannelsResponse.prototype.clearPagination = function() {
  return this.setPagination(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ibc.channel.QueryConnectionChannelsResponse.prototype.hasPagination = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional ibc.client.Height height = 3;
 * @return {?proto.ibc.client.Height}
 */
proto.ibc.channel.QueryConnectionChannelsResponse.prototype.getHeight = function() {
  return /** @type{?proto.ibc.client.Height} */ (
    jspb.Message.getWrapperField(this, ibc_client_client_pb.Height, 3));
};


/**
 * @param {?proto.ibc.client.Height|undefined} value
 * @return {!proto.ibc.channel.QueryConnectionChannelsResponse} returns this
*/
proto.ibc.channel.QueryConnectionChannelsResponse.prototype.setHeight = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ibc.channel.QueryConnectionChannelsResponse} returns this
 */
proto.ibc.channel.QueryConnectionChannelsResponse.prototype.clearHeight = function() {
  return this.setHeight(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ibc.channel.QueryConnectionChannelsResponse.prototype.hasHeight = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ibc.channel.QueryChannelClientStateRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ibc.channel.QueryChannelClientStateRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ibc.channel.QueryChannelClientStateRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ibc.channel.QueryChannelClientStateRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    portId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    channelId: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ibc.channel.QueryChannelClientStateRequest}
 */
proto.ibc.channel.QueryChannelClientStateRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ibc.channel.QueryChannelClientStateRequest;
  return proto.ibc.channel.QueryChannelClientStateRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ibc.channel.QueryChannelClientStateRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ibc.channel.QueryChannelClientStateRequest}
 */
proto.ibc.channel.QueryChannelClientStateRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPortId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setChannelId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ibc.channel.QueryChannelClientStateRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ibc.channel.QueryChannelClientStateRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ibc.channel.QueryChannelClientStateRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ibc.channel.QueryChannelClientStateRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPortId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getChannelId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string port_id = 1;
 * @return {string}
 */
proto.ibc.channel.QueryChannelClientStateRequest.prototype.getPortId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ibc.channel.QueryChannelClientStateRequest} returns this
 */
proto.ibc.channel.QueryChannelClientStateRequest.prototype.setPortId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string channel_id = 2;
 * @return {string}
 */
proto.ibc.channel.QueryChannelClientStateRequest.prototype.getChannelId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ibc.channel.QueryChannelClientStateRequest} returns this
 */
proto.ibc.channel.QueryChannelClientStateRequest.prototype.setChannelId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ibc.channel.QueryChannelClientStateResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.ibc.channel.QueryChannelClientStateResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ibc.channel.QueryChannelClientStateResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ibc.channel.QueryChannelClientStateResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    identifiedClientState: (f = msg.getIdentifiedClientState()) && ibc_client_client_pb.IdentifiedClientState.toObject(includeInstance, f),
    proof: msg.getProof_asB64(),
    proofPath: jspb.Message.getFieldWithDefault(msg, 3, ""),
    proofHeight: (f = msg.getProofHeight()) && ibc_client_client_pb.Height.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ibc.channel.QueryChannelClientStateResponse}
 */
proto.ibc.channel.QueryChannelClientStateResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ibc.channel.QueryChannelClientStateResponse;
  return proto.ibc.channel.QueryChannelClientStateResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ibc.channel.QueryChannelClientStateResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ibc.channel.QueryChannelClientStateResponse}
 */
proto.ibc.channel.QueryChannelClientStateResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new ibc_client_client_pb.IdentifiedClientState;
      reader.readMessage(value,ibc_client_client_pb.IdentifiedClientState.deserializeBinaryFromReader);
      msg.setIdentifiedClientState(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setProof(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setProofPath(value);
      break;
    case 4:
      var value = new ibc_client_client_pb.Height;
      reader.readMessage(value,ibc_client_client_pb.Height.deserializeBinaryFromReader);
      msg.setProofHeight(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ibc.channel.QueryChannelClientStateResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ibc.channel.QueryChannelClientStateResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ibc.channel.QueryChannelClientStateResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ibc.channel.QueryChannelClientStateResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIdentifiedClientState();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      ibc_client_client_pb.IdentifiedClientState.serializeBinaryToWriter
    );
  }
  f = message.getProof_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
  f = message.getProofPath();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getProofHeight();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      ibc_client_client_pb.Height.serializeBinaryToWriter
    );
  }
};


/**
 * optional ibc.client.IdentifiedClientState identified_client_state = 1;
 * @return {?proto.ibc.client.IdentifiedClientState}
 */
proto.ibc.channel.QueryChannelClientStateResponse.prototype.getIdentifiedClientState = function() {
  return /** @type{?proto.ibc.client.IdentifiedClientState} */ (
    jspb.Message.getWrapperField(this, ibc_client_client_pb.IdentifiedClientState, 1));
};


/**
 * @param {?proto.ibc.client.IdentifiedClientState|undefined} value
 * @return {!proto.ibc.channel.QueryChannelClientStateResponse} returns this
*/
proto.ibc.channel.QueryChannelClientStateResponse.prototype.setIdentifiedClientState = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ibc.channel.QueryChannelClientStateResponse} returns this
 */
proto.ibc.channel.QueryChannelClientStateResponse.prototype.clearIdentifiedClientState = function() {
  return this.setIdentifiedClientState(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ibc.channel.QueryChannelClientStateResponse.prototype.hasIdentifiedClientState = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional bytes proof = 2;
 * @return {!(string|Uint8Array)}
 */
proto.ibc.channel.QueryChannelClientStateResponse.prototype.getProof = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes proof = 2;
 * This is a type-conversion wrapper around `getProof()`
 * @return {string}
 */
proto.ibc.channel.QueryChannelClientStateResponse.prototype.getProof_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getProof()));
};


/**
 * optional bytes proof = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getProof()`
 * @return {!Uint8Array}
 */
proto.ibc.channel.QueryChannelClientStateResponse.prototype.getProof_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getProof()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.ibc.channel.QueryChannelClientStateResponse} returns this
 */
proto.ibc.channel.QueryChannelClientStateResponse.prototype.setProof = function(value) {
  return jspb.Message.setProto3BytesField(this, 2, value);
};


/**
 * optional string proof_path = 3;
 * @return {string}
 */
proto.ibc.channel.QueryChannelClientStateResponse.prototype.getProofPath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.ibc.channel.QueryChannelClientStateResponse} returns this
 */
proto.ibc.channel.QueryChannelClientStateResponse.prototype.setProofPath = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional ibc.client.Height proof_height = 4;
 * @return {?proto.ibc.client.Height}
 */
proto.ibc.channel.QueryChannelClientStateResponse.prototype.getProofHeight = function() {
  return /** @type{?proto.ibc.client.Height} */ (
    jspb.Message.getWrapperField(this, ibc_client_client_pb.Height, 4));
};


/**
 * @param {?proto.ibc.client.Height|undefined} value
 * @return {!proto.ibc.channel.QueryChannelClientStateResponse} returns this
*/
proto.ibc.channel.QueryChannelClientStateResponse.prototype.setProofHeight = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ibc.channel.QueryChannelClientStateResponse} returns this
 */
proto.ibc.channel.QueryChannelClientStateResponse.prototype.clearProofHeight = function() {
  return this.setProofHeight(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ibc.channel.QueryChannelClientStateResponse.prototype.hasProofHeight = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ibc.channel.QueryChannelConsensusStateRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ibc.channel.QueryChannelConsensusStateRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ibc.channel.QueryChannelConsensusStateRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ibc.channel.QueryChannelConsensusStateRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    portId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    channelId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    epochNumber: jspb.Message.getFieldWithDefault(msg, 3, 0),
    epochHeight: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ibc.channel.QueryChannelConsensusStateRequest}
 */
proto.ibc.channel.QueryChannelConsensusStateRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ibc.channel.QueryChannelConsensusStateRequest;
  return proto.ibc.channel.QueryChannelConsensusStateRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ibc.channel.QueryChannelConsensusStateRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ibc.channel.QueryChannelConsensusStateRequest}
 */
proto.ibc.channel.QueryChannelConsensusStateRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPortId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setChannelId(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setEpochNumber(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setEpochHeight(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ibc.channel.QueryChannelConsensusStateRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ibc.channel.QueryChannelConsensusStateRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ibc.channel.QueryChannelConsensusStateRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ibc.channel.QueryChannelConsensusStateRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPortId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getChannelId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getEpochNumber();
  if (f !== 0) {
    writer.writeUint64(
      3,
      f
    );
  }
  f = message.getEpochHeight();
  if (f !== 0) {
    writer.writeUint64(
      4,
      f
    );
  }
};


/**
 * optional string port_id = 1;
 * @return {string}
 */
proto.ibc.channel.QueryChannelConsensusStateRequest.prototype.getPortId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ibc.channel.QueryChannelConsensusStateRequest} returns this
 */
proto.ibc.channel.QueryChannelConsensusStateRequest.prototype.setPortId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string channel_id = 2;
 * @return {string}
 */
proto.ibc.channel.QueryChannelConsensusStateRequest.prototype.getChannelId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ibc.channel.QueryChannelConsensusStateRequest} returns this
 */
proto.ibc.channel.QueryChannelConsensusStateRequest.prototype.setChannelId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional uint64 epoch_number = 3;
 * @return {number}
 */
proto.ibc.channel.QueryChannelConsensusStateRequest.prototype.getEpochNumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.ibc.channel.QueryChannelConsensusStateRequest} returns this
 */
proto.ibc.channel.QueryChannelConsensusStateRequest.prototype.setEpochNumber = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional uint64 epoch_height = 4;
 * @return {number}
 */
proto.ibc.channel.QueryChannelConsensusStateRequest.prototype.getEpochHeight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.ibc.channel.QueryChannelConsensusStateRequest} returns this
 */
proto.ibc.channel.QueryChannelConsensusStateRequest.prototype.setEpochHeight = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ibc.channel.QueryChannelConsensusStateResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.ibc.channel.QueryChannelConsensusStateResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ibc.channel.QueryChannelConsensusStateResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ibc.channel.QueryChannelConsensusStateResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    consensusState: (f = msg.getConsensusState()) && google_protobuf_any_pb.Any.toObject(includeInstance, f),
    clientId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    proof: msg.getProof_asB64(),
    proofPath: jspb.Message.getFieldWithDefault(msg, 4, ""),
    proofHeight: (f = msg.getProofHeight()) && ibc_client_client_pb.Height.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ibc.channel.QueryChannelConsensusStateResponse}
 */
proto.ibc.channel.QueryChannelConsensusStateResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ibc.channel.QueryChannelConsensusStateResponse;
  return proto.ibc.channel.QueryChannelConsensusStateResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ibc.channel.QueryChannelConsensusStateResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ibc.channel.QueryChannelConsensusStateResponse}
 */
proto.ibc.channel.QueryChannelConsensusStateResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_any_pb.Any;
      reader.readMessage(value,google_protobuf_any_pb.Any.deserializeBinaryFromReader);
      msg.setConsensusState(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientId(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setProof(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setProofPath(value);
      break;
    case 5:
      var value = new ibc_client_client_pb.Height;
      reader.readMessage(value,ibc_client_client_pb.Height.deserializeBinaryFromReader);
      msg.setProofHeight(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ibc.channel.QueryChannelConsensusStateResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ibc.channel.QueryChannelConsensusStateResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ibc.channel.QueryChannelConsensusStateResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ibc.channel.QueryChannelConsensusStateResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConsensusState();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_any_pb.Any.serializeBinaryToWriter
    );
  }
  f = message.getClientId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getProof_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      3,
      f
    );
  }
  f = message.getProofPath();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getProofHeight();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      ibc_client_client_pb.Height.serializeBinaryToWriter
    );
  }
};


/**
 * optional google.protobuf.Any consensus_state = 1;
 * @return {?proto.google.protobuf.Any}
 */
proto.ibc.channel.QueryChannelConsensusStateResponse.prototype.getConsensusState = function() {
  return /** @type{?proto.google.protobuf.Any} */ (
    jspb.Message.getWrapperField(this, google_protobuf_any_pb.Any, 1));
};


/**
 * @param {?proto.google.protobuf.Any|undefined} value
 * @return {!proto.ibc.channel.QueryChannelConsensusStateResponse} returns this
*/
proto.ibc.channel.QueryChannelConsensusStateResponse.prototype.setConsensusState = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ibc.channel.QueryChannelConsensusStateResponse} returns this
 */
proto.ibc.channel.QueryChannelConsensusStateResponse.prototype.clearConsensusState = function() {
  return this.setConsensusState(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ibc.channel.QueryChannelConsensusStateResponse.prototype.hasConsensusState = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string client_id = 2;
 * @return {string}
 */
proto.ibc.channel.QueryChannelConsensusStateResponse.prototype.getClientId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ibc.channel.QueryChannelConsensusStateResponse} returns this
 */
proto.ibc.channel.QueryChannelConsensusStateResponse.prototype.setClientId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional bytes proof = 3;
 * @return {!(string|Uint8Array)}
 */
proto.ibc.channel.QueryChannelConsensusStateResponse.prototype.getProof = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes proof = 3;
 * This is a type-conversion wrapper around `getProof()`
 * @return {string}
 */
proto.ibc.channel.QueryChannelConsensusStateResponse.prototype.getProof_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getProof()));
};


/**
 * optional bytes proof = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getProof()`
 * @return {!Uint8Array}
 */
proto.ibc.channel.QueryChannelConsensusStateResponse.prototype.getProof_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getProof()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.ibc.channel.QueryChannelConsensusStateResponse} returns this
 */
proto.ibc.channel.QueryChannelConsensusStateResponse.prototype.setProof = function(value) {
  return jspb.Message.setProto3BytesField(this, 3, value);
};


/**
 * optional string proof_path = 4;
 * @return {string}
 */
proto.ibc.channel.QueryChannelConsensusStateResponse.prototype.getProofPath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.ibc.channel.QueryChannelConsensusStateResponse} returns this
 */
proto.ibc.channel.QueryChannelConsensusStateResponse.prototype.setProofPath = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional ibc.client.Height proof_height = 5;
 * @return {?proto.ibc.client.Height}
 */
proto.ibc.channel.QueryChannelConsensusStateResponse.prototype.getProofHeight = function() {
  return /** @type{?proto.ibc.client.Height} */ (
    jspb.Message.getWrapperField(this, ibc_client_client_pb.Height, 5));
};


/**
 * @param {?proto.ibc.client.Height|undefined} value
 * @return {!proto.ibc.channel.QueryChannelConsensusStateResponse} returns this
*/
proto.ibc.channel.QueryChannelConsensusStateResponse.prototype.setProofHeight = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ibc.channel.QueryChannelConsensusStateResponse} returns this
 */
proto.ibc.channel.QueryChannelConsensusStateResponse.prototype.clearProofHeight = function() {
  return this.setProofHeight(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ibc.channel.QueryChannelConsensusStateResponse.prototype.hasProofHeight = function() {
  return jspb.Message.getField(this, 5) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ibc.channel.QueryPacketCommitmentRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ibc.channel.QueryPacketCommitmentRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ibc.channel.QueryPacketCommitmentRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ibc.channel.QueryPacketCommitmentRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    portId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    channelId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    sequence: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ibc.channel.QueryPacketCommitmentRequest}
 */
proto.ibc.channel.QueryPacketCommitmentRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ibc.channel.QueryPacketCommitmentRequest;
  return proto.ibc.channel.QueryPacketCommitmentRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ibc.channel.QueryPacketCommitmentRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ibc.channel.QueryPacketCommitmentRequest}
 */
proto.ibc.channel.QueryPacketCommitmentRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPortId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setChannelId(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setSequence(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ibc.channel.QueryPacketCommitmentRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ibc.channel.QueryPacketCommitmentRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ibc.channel.QueryPacketCommitmentRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ibc.channel.QueryPacketCommitmentRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPortId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getChannelId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getSequence();
  if (f !== 0) {
    writer.writeUint64(
      3,
      f
    );
  }
};


/**
 * optional string port_id = 1;
 * @return {string}
 */
proto.ibc.channel.QueryPacketCommitmentRequest.prototype.getPortId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ibc.channel.QueryPacketCommitmentRequest} returns this
 */
proto.ibc.channel.QueryPacketCommitmentRequest.prototype.setPortId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string channel_id = 2;
 * @return {string}
 */
proto.ibc.channel.QueryPacketCommitmentRequest.prototype.getChannelId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ibc.channel.QueryPacketCommitmentRequest} returns this
 */
proto.ibc.channel.QueryPacketCommitmentRequest.prototype.setChannelId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional uint64 sequence = 3;
 * @return {number}
 */
proto.ibc.channel.QueryPacketCommitmentRequest.prototype.getSequence = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.ibc.channel.QueryPacketCommitmentRequest} returns this
 */
proto.ibc.channel.QueryPacketCommitmentRequest.prototype.setSequence = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ibc.channel.QueryPacketCommitmentResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.ibc.channel.QueryPacketCommitmentResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ibc.channel.QueryPacketCommitmentResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ibc.channel.QueryPacketCommitmentResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    commitment: msg.getCommitment_asB64(),
    proof: msg.getProof_asB64(),
    proofPath: jspb.Message.getFieldWithDefault(msg, 3, ""),
    proofHeight: (f = msg.getProofHeight()) && ibc_client_client_pb.Height.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ibc.channel.QueryPacketCommitmentResponse}
 */
proto.ibc.channel.QueryPacketCommitmentResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ibc.channel.QueryPacketCommitmentResponse;
  return proto.ibc.channel.QueryPacketCommitmentResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ibc.channel.QueryPacketCommitmentResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ibc.channel.QueryPacketCommitmentResponse}
 */
proto.ibc.channel.QueryPacketCommitmentResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setCommitment(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setProof(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setProofPath(value);
      break;
    case 4:
      var value = new ibc_client_client_pb.Height;
      reader.readMessage(value,ibc_client_client_pb.Height.deserializeBinaryFromReader);
      msg.setProofHeight(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ibc.channel.QueryPacketCommitmentResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ibc.channel.QueryPacketCommitmentResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ibc.channel.QueryPacketCommitmentResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ibc.channel.QueryPacketCommitmentResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCommitment_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getProof_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
  f = message.getProofPath();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getProofHeight();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      ibc_client_client_pb.Height.serializeBinaryToWriter
    );
  }
};


/**
 * optional bytes commitment = 1;
 * @return {!(string|Uint8Array)}
 */
proto.ibc.channel.QueryPacketCommitmentResponse.prototype.getCommitment = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes commitment = 1;
 * This is a type-conversion wrapper around `getCommitment()`
 * @return {string}
 */
proto.ibc.channel.QueryPacketCommitmentResponse.prototype.getCommitment_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getCommitment()));
};


/**
 * optional bytes commitment = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getCommitment()`
 * @return {!Uint8Array}
 */
proto.ibc.channel.QueryPacketCommitmentResponse.prototype.getCommitment_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getCommitment()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.ibc.channel.QueryPacketCommitmentResponse} returns this
 */
proto.ibc.channel.QueryPacketCommitmentResponse.prototype.setCommitment = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional bytes proof = 2;
 * @return {!(string|Uint8Array)}
 */
proto.ibc.channel.QueryPacketCommitmentResponse.prototype.getProof = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes proof = 2;
 * This is a type-conversion wrapper around `getProof()`
 * @return {string}
 */
proto.ibc.channel.QueryPacketCommitmentResponse.prototype.getProof_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getProof()));
};


/**
 * optional bytes proof = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getProof()`
 * @return {!Uint8Array}
 */
proto.ibc.channel.QueryPacketCommitmentResponse.prototype.getProof_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getProof()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.ibc.channel.QueryPacketCommitmentResponse} returns this
 */
proto.ibc.channel.QueryPacketCommitmentResponse.prototype.setProof = function(value) {
  return jspb.Message.setProto3BytesField(this, 2, value);
};


/**
 * optional string proof_path = 3;
 * @return {string}
 */
proto.ibc.channel.QueryPacketCommitmentResponse.prototype.getProofPath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.ibc.channel.QueryPacketCommitmentResponse} returns this
 */
proto.ibc.channel.QueryPacketCommitmentResponse.prototype.setProofPath = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional ibc.client.Height proof_height = 4;
 * @return {?proto.ibc.client.Height}
 */
proto.ibc.channel.QueryPacketCommitmentResponse.prototype.getProofHeight = function() {
  return /** @type{?proto.ibc.client.Height} */ (
    jspb.Message.getWrapperField(this, ibc_client_client_pb.Height, 4));
};


/**
 * @param {?proto.ibc.client.Height|undefined} value
 * @return {!proto.ibc.channel.QueryPacketCommitmentResponse} returns this
*/
proto.ibc.channel.QueryPacketCommitmentResponse.prototype.setProofHeight = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ibc.channel.QueryPacketCommitmentResponse} returns this
 */
proto.ibc.channel.QueryPacketCommitmentResponse.prototype.clearProofHeight = function() {
  return this.setProofHeight(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ibc.channel.QueryPacketCommitmentResponse.prototype.hasProofHeight = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ibc.channel.QueryPacketCommitmentsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ibc.channel.QueryPacketCommitmentsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ibc.channel.QueryPacketCommitmentsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ibc.channel.QueryPacketCommitmentsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    portId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    channelId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    pagination: (f = msg.getPagination()) && cosmos_base_query_v1beta1_pagination_pb.PageRequest.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ibc.channel.QueryPacketCommitmentsRequest}
 */
proto.ibc.channel.QueryPacketCommitmentsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ibc.channel.QueryPacketCommitmentsRequest;
  return proto.ibc.channel.QueryPacketCommitmentsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ibc.channel.QueryPacketCommitmentsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ibc.channel.QueryPacketCommitmentsRequest}
 */
proto.ibc.channel.QueryPacketCommitmentsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPortId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setChannelId(value);
      break;
    case 3:
      var value = new cosmos_base_query_v1beta1_pagination_pb.PageRequest;
      reader.readMessage(value,cosmos_base_query_v1beta1_pagination_pb.PageRequest.deserializeBinaryFromReader);
      msg.setPagination(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ibc.channel.QueryPacketCommitmentsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ibc.channel.QueryPacketCommitmentsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ibc.channel.QueryPacketCommitmentsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ibc.channel.QueryPacketCommitmentsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPortId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getChannelId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPagination();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      cosmos_base_query_v1beta1_pagination_pb.PageRequest.serializeBinaryToWriter
    );
  }
};


/**
 * optional string port_id = 1;
 * @return {string}
 */
proto.ibc.channel.QueryPacketCommitmentsRequest.prototype.getPortId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ibc.channel.QueryPacketCommitmentsRequest} returns this
 */
proto.ibc.channel.QueryPacketCommitmentsRequest.prototype.setPortId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string channel_id = 2;
 * @return {string}
 */
proto.ibc.channel.QueryPacketCommitmentsRequest.prototype.getChannelId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ibc.channel.QueryPacketCommitmentsRequest} returns this
 */
proto.ibc.channel.QueryPacketCommitmentsRequest.prototype.setChannelId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional cosmos.base.query.v1beta1.PageRequest pagination = 3;
 * @return {?proto.cosmos.base.query.v1beta1.PageRequest}
 */
proto.ibc.channel.QueryPacketCommitmentsRequest.prototype.getPagination = function() {
  return /** @type{?proto.cosmos.base.query.v1beta1.PageRequest} */ (
    jspb.Message.getWrapperField(this, cosmos_base_query_v1beta1_pagination_pb.PageRequest, 3));
};


/**
 * @param {?proto.cosmos.base.query.v1beta1.PageRequest|undefined} value
 * @return {!proto.ibc.channel.QueryPacketCommitmentsRequest} returns this
*/
proto.ibc.channel.QueryPacketCommitmentsRequest.prototype.setPagination = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ibc.channel.QueryPacketCommitmentsRequest} returns this
 */
proto.ibc.channel.QueryPacketCommitmentsRequest.prototype.clearPagination = function() {
  return this.setPagination(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ibc.channel.QueryPacketCommitmentsRequest.prototype.hasPagination = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ibc.channel.QueryPacketCommitmentsResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ibc.channel.QueryPacketCommitmentsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.ibc.channel.QueryPacketCommitmentsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ibc.channel.QueryPacketCommitmentsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ibc.channel.QueryPacketCommitmentsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    commitmentsList: jspb.Message.toObjectList(msg.getCommitmentsList(),
    ibc_channel_channel_pb.PacketAckCommitment.toObject, includeInstance),
    pagination: (f = msg.getPagination()) && cosmos_base_query_v1beta1_pagination_pb.PageResponse.toObject(includeInstance, f),
    height: (f = msg.getHeight()) && ibc_client_client_pb.Height.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ibc.channel.QueryPacketCommitmentsResponse}
 */
proto.ibc.channel.QueryPacketCommitmentsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ibc.channel.QueryPacketCommitmentsResponse;
  return proto.ibc.channel.QueryPacketCommitmentsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ibc.channel.QueryPacketCommitmentsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ibc.channel.QueryPacketCommitmentsResponse}
 */
proto.ibc.channel.QueryPacketCommitmentsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new ibc_channel_channel_pb.PacketAckCommitment;
      reader.readMessage(value,ibc_channel_channel_pb.PacketAckCommitment.deserializeBinaryFromReader);
      msg.addCommitments(value);
      break;
    case 2:
      var value = new cosmos_base_query_v1beta1_pagination_pb.PageResponse;
      reader.readMessage(value,cosmos_base_query_v1beta1_pagination_pb.PageResponse.deserializeBinaryFromReader);
      msg.setPagination(value);
      break;
    case 3:
      var value = new ibc_client_client_pb.Height;
      reader.readMessage(value,ibc_client_client_pb.Height.deserializeBinaryFromReader);
      msg.setHeight(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ibc.channel.QueryPacketCommitmentsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ibc.channel.QueryPacketCommitmentsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ibc.channel.QueryPacketCommitmentsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ibc.channel.QueryPacketCommitmentsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCommitmentsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      ibc_channel_channel_pb.PacketAckCommitment.serializeBinaryToWriter
    );
  }
  f = message.getPagination();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      cosmos_base_query_v1beta1_pagination_pb.PageResponse.serializeBinaryToWriter
    );
  }
  f = message.getHeight();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      ibc_client_client_pb.Height.serializeBinaryToWriter
    );
  }
};


/**
 * repeated PacketAckCommitment commitments = 1;
 * @return {!Array<!proto.ibc.channel.PacketAckCommitment>}
 */
proto.ibc.channel.QueryPacketCommitmentsResponse.prototype.getCommitmentsList = function() {
  return /** @type{!Array<!proto.ibc.channel.PacketAckCommitment>} */ (
    jspb.Message.getRepeatedWrapperField(this, ibc_channel_channel_pb.PacketAckCommitment, 1));
};


/**
 * @param {!Array<!proto.ibc.channel.PacketAckCommitment>} value
 * @return {!proto.ibc.channel.QueryPacketCommitmentsResponse} returns this
*/
proto.ibc.channel.QueryPacketCommitmentsResponse.prototype.setCommitmentsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.ibc.channel.PacketAckCommitment=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ibc.channel.PacketAckCommitment}
 */
proto.ibc.channel.QueryPacketCommitmentsResponse.prototype.addCommitments = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.ibc.channel.PacketAckCommitment, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ibc.channel.QueryPacketCommitmentsResponse} returns this
 */
proto.ibc.channel.QueryPacketCommitmentsResponse.prototype.clearCommitmentsList = function() {
  return this.setCommitmentsList([]);
};


/**
 * optional cosmos.base.query.v1beta1.PageResponse pagination = 2;
 * @return {?proto.cosmos.base.query.v1beta1.PageResponse}
 */
proto.ibc.channel.QueryPacketCommitmentsResponse.prototype.getPagination = function() {
  return /** @type{?proto.cosmos.base.query.v1beta1.PageResponse} */ (
    jspb.Message.getWrapperField(this, cosmos_base_query_v1beta1_pagination_pb.PageResponse, 2));
};


/**
 * @param {?proto.cosmos.base.query.v1beta1.PageResponse|undefined} value
 * @return {!proto.ibc.channel.QueryPacketCommitmentsResponse} returns this
*/
proto.ibc.channel.QueryPacketCommitmentsResponse.prototype.setPagination = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ibc.channel.QueryPacketCommitmentsResponse} returns this
 */
proto.ibc.channel.QueryPacketCommitmentsResponse.prototype.clearPagination = function() {
  return this.setPagination(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ibc.channel.QueryPacketCommitmentsResponse.prototype.hasPagination = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional ibc.client.Height height = 3;
 * @return {?proto.ibc.client.Height}
 */
proto.ibc.channel.QueryPacketCommitmentsResponse.prototype.getHeight = function() {
  return /** @type{?proto.ibc.client.Height} */ (
    jspb.Message.getWrapperField(this, ibc_client_client_pb.Height, 3));
};


/**
 * @param {?proto.ibc.client.Height|undefined} value
 * @return {!proto.ibc.channel.QueryPacketCommitmentsResponse} returns this
*/
proto.ibc.channel.QueryPacketCommitmentsResponse.prototype.setHeight = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ibc.channel.QueryPacketCommitmentsResponse} returns this
 */
proto.ibc.channel.QueryPacketCommitmentsResponse.prototype.clearHeight = function() {
  return this.setHeight(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ibc.channel.QueryPacketCommitmentsResponse.prototype.hasHeight = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ibc.channel.QueryPacketAcknowledgementRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ibc.channel.QueryPacketAcknowledgementRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ibc.channel.QueryPacketAcknowledgementRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ibc.channel.QueryPacketAcknowledgementRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    portId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    channelId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    sequence: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ibc.channel.QueryPacketAcknowledgementRequest}
 */
proto.ibc.channel.QueryPacketAcknowledgementRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ibc.channel.QueryPacketAcknowledgementRequest;
  return proto.ibc.channel.QueryPacketAcknowledgementRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ibc.channel.QueryPacketAcknowledgementRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ibc.channel.QueryPacketAcknowledgementRequest}
 */
proto.ibc.channel.QueryPacketAcknowledgementRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPortId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setChannelId(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setSequence(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ibc.channel.QueryPacketAcknowledgementRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ibc.channel.QueryPacketAcknowledgementRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ibc.channel.QueryPacketAcknowledgementRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ibc.channel.QueryPacketAcknowledgementRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPortId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getChannelId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getSequence();
  if (f !== 0) {
    writer.writeUint64(
      3,
      f
    );
  }
};


/**
 * optional string port_id = 1;
 * @return {string}
 */
proto.ibc.channel.QueryPacketAcknowledgementRequest.prototype.getPortId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ibc.channel.QueryPacketAcknowledgementRequest} returns this
 */
proto.ibc.channel.QueryPacketAcknowledgementRequest.prototype.setPortId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string channel_id = 2;
 * @return {string}
 */
proto.ibc.channel.QueryPacketAcknowledgementRequest.prototype.getChannelId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ibc.channel.QueryPacketAcknowledgementRequest} returns this
 */
proto.ibc.channel.QueryPacketAcknowledgementRequest.prototype.setChannelId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional uint64 sequence = 3;
 * @return {number}
 */
proto.ibc.channel.QueryPacketAcknowledgementRequest.prototype.getSequence = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.ibc.channel.QueryPacketAcknowledgementRequest} returns this
 */
proto.ibc.channel.QueryPacketAcknowledgementRequest.prototype.setSequence = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ibc.channel.QueryPacketAcknowledgementResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.ibc.channel.QueryPacketAcknowledgementResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ibc.channel.QueryPacketAcknowledgementResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ibc.channel.QueryPacketAcknowledgementResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    acknowledgement: msg.getAcknowledgement_asB64(),
    proof: msg.getProof_asB64(),
    proofPath: jspb.Message.getFieldWithDefault(msg, 3, ""),
    proofHeight: (f = msg.getProofHeight()) && ibc_client_client_pb.Height.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ibc.channel.QueryPacketAcknowledgementResponse}
 */
proto.ibc.channel.QueryPacketAcknowledgementResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ibc.channel.QueryPacketAcknowledgementResponse;
  return proto.ibc.channel.QueryPacketAcknowledgementResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ibc.channel.QueryPacketAcknowledgementResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ibc.channel.QueryPacketAcknowledgementResponse}
 */
proto.ibc.channel.QueryPacketAcknowledgementResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setAcknowledgement(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setProof(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setProofPath(value);
      break;
    case 4:
      var value = new ibc_client_client_pb.Height;
      reader.readMessage(value,ibc_client_client_pb.Height.deserializeBinaryFromReader);
      msg.setProofHeight(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ibc.channel.QueryPacketAcknowledgementResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ibc.channel.QueryPacketAcknowledgementResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ibc.channel.QueryPacketAcknowledgementResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ibc.channel.QueryPacketAcknowledgementResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAcknowledgement_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getProof_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
  f = message.getProofPath();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getProofHeight();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      ibc_client_client_pb.Height.serializeBinaryToWriter
    );
  }
};


/**
 * optional bytes acknowledgement = 1;
 * @return {!(string|Uint8Array)}
 */
proto.ibc.channel.QueryPacketAcknowledgementResponse.prototype.getAcknowledgement = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes acknowledgement = 1;
 * This is a type-conversion wrapper around `getAcknowledgement()`
 * @return {string}
 */
proto.ibc.channel.QueryPacketAcknowledgementResponse.prototype.getAcknowledgement_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getAcknowledgement()));
};


/**
 * optional bytes acknowledgement = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getAcknowledgement()`
 * @return {!Uint8Array}
 */
proto.ibc.channel.QueryPacketAcknowledgementResponse.prototype.getAcknowledgement_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getAcknowledgement()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.ibc.channel.QueryPacketAcknowledgementResponse} returns this
 */
proto.ibc.channel.QueryPacketAcknowledgementResponse.prototype.setAcknowledgement = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional bytes proof = 2;
 * @return {!(string|Uint8Array)}
 */
proto.ibc.channel.QueryPacketAcknowledgementResponse.prototype.getProof = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes proof = 2;
 * This is a type-conversion wrapper around `getProof()`
 * @return {string}
 */
proto.ibc.channel.QueryPacketAcknowledgementResponse.prototype.getProof_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getProof()));
};


/**
 * optional bytes proof = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getProof()`
 * @return {!Uint8Array}
 */
proto.ibc.channel.QueryPacketAcknowledgementResponse.prototype.getProof_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getProof()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.ibc.channel.QueryPacketAcknowledgementResponse} returns this
 */
proto.ibc.channel.QueryPacketAcknowledgementResponse.prototype.setProof = function(value) {
  return jspb.Message.setProto3BytesField(this, 2, value);
};


/**
 * optional string proof_path = 3;
 * @return {string}
 */
proto.ibc.channel.QueryPacketAcknowledgementResponse.prototype.getProofPath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.ibc.channel.QueryPacketAcknowledgementResponse} returns this
 */
proto.ibc.channel.QueryPacketAcknowledgementResponse.prototype.setProofPath = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional ibc.client.Height proof_height = 4;
 * @return {?proto.ibc.client.Height}
 */
proto.ibc.channel.QueryPacketAcknowledgementResponse.prototype.getProofHeight = function() {
  return /** @type{?proto.ibc.client.Height} */ (
    jspb.Message.getWrapperField(this, ibc_client_client_pb.Height, 4));
};


/**
 * @param {?proto.ibc.client.Height|undefined} value
 * @return {!proto.ibc.channel.QueryPacketAcknowledgementResponse} returns this
*/
proto.ibc.channel.QueryPacketAcknowledgementResponse.prototype.setProofHeight = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ibc.channel.QueryPacketAcknowledgementResponse} returns this
 */
proto.ibc.channel.QueryPacketAcknowledgementResponse.prototype.clearProofHeight = function() {
  return this.setProofHeight(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ibc.channel.QueryPacketAcknowledgementResponse.prototype.hasProofHeight = function() {
  return jspb.Message.getField(this, 4) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ibc.channel.QueryUnrelayedPacketsRequest.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ibc.channel.QueryUnrelayedPacketsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ibc.channel.QueryUnrelayedPacketsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ibc.channel.QueryUnrelayedPacketsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ibc.channel.QueryUnrelayedPacketsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    portId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    channelId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    packetCommitmentSequencesList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f,
    acknowledgements: jspb.Message.getBooleanFieldWithDefault(msg, 4, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ibc.channel.QueryUnrelayedPacketsRequest}
 */
proto.ibc.channel.QueryUnrelayedPacketsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ibc.channel.QueryUnrelayedPacketsRequest;
  return proto.ibc.channel.QueryUnrelayedPacketsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ibc.channel.QueryUnrelayedPacketsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ibc.channel.QueryUnrelayedPacketsRequest}
 */
proto.ibc.channel.QueryUnrelayedPacketsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPortId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setChannelId(value);
      break;
    case 3:
      var value = /** @type {!Array<number>} */ (reader.readPackedUint64());
      msg.setPacketCommitmentSequencesList(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAcknowledgements(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ibc.channel.QueryUnrelayedPacketsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ibc.channel.QueryUnrelayedPacketsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ibc.channel.QueryUnrelayedPacketsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ibc.channel.QueryUnrelayedPacketsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPortId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getChannelId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPacketCommitmentSequencesList();
  if (f.length > 0) {
    writer.writePackedUint64(
      3,
      f
    );
  }
  f = message.getAcknowledgements();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
};


/**
 * optional string port_id = 1;
 * @return {string}
 */
proto.ibc.channel.QueryUnrelayedPacketsRequest.prototype.getPortId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ibc.channel.QueryUnrelayedPacketsRequest} returns this
 */
proto.ibc.channel.QueryUnrelayedPacketsRequest.prototype.setPortId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string channel_id = 2;
 * @return {string}
 */
proto.ibc.channel.QueryUnrelayedPacketsRequest.prototype.getChannelId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ibc.channel.QueryUnrelayedPacketsRequest} returns this
 */
proto.ibc.channel.QueryUnrelayedPacketsRequest.prototype.setChannelId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated uint64 packet_commitment_sequences = 3;
 * @return {!Array<number>}
 */
proto.ibc.channel.QueryUnrelayedPacketsRequest.prototype.getPacketCommitmentSequencesList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.ibc.channel.QueryUnrelayedPacketsRequest} returns this
 */
proto.ibc.channel.QueryUnrelayedPacketsRequest.prototype.setPacketCommitmentSequencesList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.ibc.channel.QueryUnrelayedPacketsRequest} returns this
 */
proto.ibc.channel.QueryUnrelayedPacketsRequest.prototype.addPacketCommitmentSequences = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ibc.channel.QueryUnrelayedPacketsRequest} returns this
 */
proto.ibc.channel.QueryUnrelayedPacketsRequest.prototype.clearPacketCommitmentSequencesList = function() {
  return this.setPacketCommitmentSequencesList([]);
};


/**
 * optional bool acknowledgements = 4;
 * @return {boolean}
 */
proto.ibc.channel.QueryUnrelayedPacketsRequest.prototype.getAcknowledgements = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ibc.channel.QueryUnrelayedPacketsRequest} returns this
 */
proto.ibc.channel.QueryUnrelayedPacketsRequest.prototype.setAcknowledgements = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ibc.channel.QueryUnrelayedPacketsResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ibc.channel.QueryUnrelayedPacketsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.ibc.channel.QueryUnrelayedPacketsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ibc.channel.QueryUnrelayedPacketsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ibc.channel.QueryUnrelayedPacketsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    sequencesList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,
    height: (f = msg.getHeight()) && ibc_client_client_pb.Height.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ibc.channel.QueryUnrelayedPacketsResponse}
 */
proto.ibc.channel.QueryUnrelayedPacketsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ibc.channel.QueryUnrelayedPacketsResponse;
  return proto.ibc.channel.QueryUnrelayedPacketsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ibc.channel.QueryUnrelayedPacketsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ibc.channel.QueryUnrelayedPacketsResponse}
 */
proto.ibc.channel.QueryUnrelayedPacketsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Array<number>} */ (reader.readPackedUint64());
      msg.setSequencesList(value);
      break;
    case 2:
      var value = new ibc_client_client_pb.Height;
      reader.readMessage(value,ibc_client_client_pb.Height.deserializeBinaryFromReader);
      msg.setHeight(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ibc.channel.QueryUnrelayedPacketsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ibc.channel.QueryUnrelayedPacketsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ibc.channel.QueryUnrelayedPacketsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ibc.channel.QueryUnrelayedPacketsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSequencesList();
  if (f.length > 0) {
    writer.writePackedUint64(
      1,
      f
    );
  }
  f = message.getHeight();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      ibc_client_client_pb.Height.serializeBinaryToWriter
    );
  }
};


/**
 * repeated uint64 sequences = 1;
 * @return {!Array<number>}
 */
proto.ibc.channel.QueryUnrelayedPacketsResponse.prototype.getSequencesList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.ibc.channel.QueryUnrelayedPacketsResponse} returns this
 */
proto.ibc.channel.QueryUnrelayedPacketsResponse.prototype.setSequencesList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.ibc.channel.QueryUnrelayedPacketsResponse} returns this
 */
proto.ibc.channel.QueryUnrelayedPacketsResponse.prototype.addSequences = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ibc.channel.QueryUnrelayedPacketsResponse} returns this
 */
proto.ibc.channel.QueryUnrelayedPacketsResponse.prototype.clearSequencesList = function() {
  return this.setSequencesList([]);
};


/**
 * optional ibc.client.Height height = 2;
 * @return {?proto.ibc.client.Height}
 */
proto.ibc.channel.QueryUnrelayedPacketsResponse.prototype.getHeight = function() {
  return /** @type{?proto.ibc.client.Height} */ (
    jspb.Message.getWrapperField(this, ibc_client_client_pb.Height, 2));
};


/**
 * @param {?proto.ibc.client.Height|undefined} value
 * @return {!proto.ibc.channel.QueryUnrelayedPacketsResponse} returns this
*/
proto.ibc.channel.QueryUnrelayedPacketsResponse.prototype.setHeight = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ibc.channel.QueryUnrelayedPacketsResponse} returns this
 */
proto.ibc.channel.QueryUnrelayedPacketsResponse.prototype.clearHeight = function() {
  return this.setHeight(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ibc.channel.QueryUnrelayedPacketsResponse.prototype.hasHeight = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ibc.channel.QueryNextSequenceReceiveRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ibc.channel.QueryNextSequenceReceiveRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ibc.channel.QueryNextSequenceReceiveRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ibc.channel.QueryNextSequenceReceiveRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    portId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    channelId: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ibc.channel.QueryNextSequenceReceiveRequest}
 */
proto.ibc.channel.QueryNextSequenceReceiveRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ibc.channel.QueryNextSequenceReceiveRequest;
  return proto.ibc.channel.QueryNextSequenceReceiveRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ibc.channel.QueryNextSequenceReceiveRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ibc.channel.QueryNextSequenceReceiveRequest}
 */
proto.ibc.channel.QueryNextSequenceReceiveRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPortId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setChannelId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ibc.channel.QueryNextSequenceReceiveRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ibc.channel.QueryNextSequenceReceiveRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ibc.channel.QueryNextSequenceReceiveRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ibc.channel.QueryNextSequenceReceiveRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPortId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getChannelId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string port_id = 1;
 * @return {string}
 */
proto.ibc.channel.QueryNextSequenceReceiveRequest.prototype.getPortId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ibc.channel.QueryNextSequenceReceiveRequest} returns this
 */
proto.ibc.channel.QueryNextSequenceReceiveRequest.prototype.setPortId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string channel_id = 2;
 * @return {string}
 */
proto.ibc.channel.QueryNextSequenceReceiveRequest.prototype.getChannelId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ibc.channel.QueryNextSequenceReceiveRequest} returns this
 */
proto.ibc.channel.QueryNextSequenceReceiveRequest.prototype.setChannelId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ibc.channel.QueryNextSequenceReceiveResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.ibc.channel.QueryNextSequenceReceiveResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ibc.channel.QueryNextSequenceReceiveResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ibc.channel.QueryNextSequenceReceiveResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    nextSequenceReceive: jspb.Message.getFieldWithDefault(msg, 1, 0),
    proof: msg.getProof_asB64(),
    proofPath: jspb.Message.getFieldWithDefault(msg, 3, ""),
    proofHeight: (f = msg.getProofHeight()) && ibc_client_client_pb.Height.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ibc.channel.QueryNextSequenceReceiveResponse}
 */
proto.ibc.channel.QueryNextSequenceReceiveResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ibc.channel.QueryNextSequenceReceiveResponse;
  return proto.ibc.channel.QueryNextSequenceReceiveResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ibc.channel.QueryNextSequenceReceiveResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ibc.channel.QueryNextSequenceReceiveResponse}
 */
proto.ibc.channel.QueryNextSequenceReceiveResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setNextSequenceReceive(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setProof(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setProofPath(value);
      break;
    case 4:
      var value = new ibc_client_client_pb.Height;
      reader.readMessage(value,ibc_client_client_pb.Height.deserializeBinaryFromReader);
      msg.setProofHeight(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ibc.channel.QueryNextSequenceReceiveResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ibc.channel.QueryNextSequenceReceiveResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ibc.channel.QueryNextSequenceReceiveResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ibc.channel.QueryNextSequenceReceiveResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNextSequenceReceive();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getProof_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
  f = message.getProofPath();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getProofHeight();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      ibc_client_client_pb.Height.serializeBinaryToWriter
    );
  }
};


/**
 * optional uint64 next_sequence_receive = 1;
 * @return {number}
 */
proto.ibc.channel.QueryNextSequenceReceiveResponse.prototype.getNextSequenceReceive = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.ibc.channel.QueryNextSequenceReceiveResponse} returns this
 */
proto.ibc.channel.QueryNextSequenceReceiveResponse.prototype.setNextSequenceReceive = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional bytes proof = 2;
 * @return {!(string|Uint8Array)}
 */
proto.ibc.channel.QueryNextSequenceReceiveResponse.prototype.getProof = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes proof = 2;
 * This is a type-conversion wrapper around `getProof()`
 * @return {string}
 */
proto.ibc.channel.QueryNextSequenceReceiveResponse.prototype.getProof_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getProof()));
};


/**
 * optional bytes proof = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getProof()`
 * @return {!Uint8Array}
 */
proto.ibc.channel.QueryNextSequenceReceiveResponse.prototype.getProof_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getProof()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.ibc.channel.QueryNextSequenceReceiveResponse} returns this
 */
proto.ibc.channel.QueryNextSequenceReceiveResponse.prototype.setProof = function(value) {
  return jspb.Message.setProto3BytesField(this, 2, value);
};


/**
 * optional string proof_path = 3;
 * @return {string}
 */
proto.ibc.channel.QueryNextSequenceReceiveResponse.prototype.getProofPath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.ibc.channel.QueryNextSequenceReceiveResponse} returns this
 */
proto.ibc.channel.QueryNextSequenceReceiveResponse.prototype.setProofPath = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional ibc.client.Height proof_height = 4;
 * @return {?proto.ibc.client.Height}
 */
proto.ibc.channel.QueryNextSequenceReceiveResponse.prototype.getProofHeight = function() {
  return /** @type{?proto.ibc.client.Height} */ (
    jspb.Message.getWrapperField(this, ibc_client_client_pb.Height, 4));
};


/**
 * @param {?proto.ibc.client.Height|undefined} value
 * @return {!proto.ibc.channel.QueryNextSequenceReceiveResponse} returns this
*/
proto.ibc.channel.QueryNextSequenceReceiveResponse.prototype.setProofHeight = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ibc.channel.QueryNextSequenceReceiveResponse} returns this
 */
proto.ibc.channel.QueryNextSequenceReceiveResponse.prototype.clearProofHeight = function() {
  return this.setProofHeight(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ibc.channel.QueryNextSequenceReceiveResponse.prototype.hasProofHeight = function() {
  return jspb.Message.getField(this, 4) != null;
};


goog.object.extend(exports, proto.ibc.channel);
