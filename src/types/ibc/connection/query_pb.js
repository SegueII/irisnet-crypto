// source: ibc/connection/query.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var gogoproto_gogo_pb = require('../../gogoproto/gogo_pb.js');
goog.object.extend(proto, gogoproto_gogo_pb);
var cosmos_base_query_v1beta1_pagination_pb = require('../../cosmos/base/query/v1beta1/pagination_pb.js');
goog.object.extend(proto, cosmos_base_query_v1beta1_pagination_pb);
var ibc_client_client_pb = require('../../ibc/client/client_pb.js');
goog.object.extend(proto, ibc_client_client_pb);
var ibc_connection_connection_pb = require('../../ibc/connection/connection_pb.js');
goog.object.extend(proto, ibc_connection_connection_pb);
var google_api_annotations_pb = require('../../google/api/annotations_pb.js');
goog.object.extend(proto, google_api_annotations_pb);
var google_protobuf_any_pb = require('google-protobuf/google/protobuf/any_pb.js');
goog.object.extend(proto, google_protobuf_any_pb);
goog.exportSymbol('proto.ibc.connection.QueryClientConnectionsRequest', null, global);
goog.exportSymbol('proto.ibc.connection.QueryClientConnectionsResponse', null, global);
goog.exportSymbol('proto.ibc.connection.QueryConnectionClientStateRequest', null, global);
goog.exportSymbol('proto.ibc.connection.QueryConnectionClientStateResponse', null, global);
goog.exportSymbol('proto.ibc.connection.QueryConnectionConsensusStateRequest', null, global);
goog.exportSymbol('proto.ibc.connection.QueryConnectionConsensusStateResponse', null, global);
goog.exportSymbol('proto.ibc.connection.QueryConnectionRequest', null, global);
goog.exportSymbol('proto.ibc.connection.QueryConnectionResponse', null, global);
goog.exportSymbol('proto.ibc.connection.QueryConnectionsRequest', null, global);
goog.exportSymbol('proto.ibc.connection.QueryConnectionsResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ibc.connection.QueryConnectionRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ibc.connection.QueryConnectionRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ibc.connection.QueryConnectionRequest.displayName = 'proto.ibc.connection.QueryConnectionRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ibc.connection.QueryConnectionResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ibc.connection.QueryConnectionResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ibc.connection.QueryConnectionResponse.displayName = 'proto.ibc.connection.QueryConnectionResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ibc.connection.QueryConnectionsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ibc.connection.QueryConnectionsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ibc.connection.QueryConnectionsRequest.displayName = 'proto.ibc.connection.QueryConnectionsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ibc.connection.QueryConnectionsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ibc.connection.QueryConnectionsResponse.repeatedFields_, null);
};
goog.inherits(proto.ibc.connection.QueryConnectionsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ibc.connection.QueryConnectionsResponse.displayName = 'proto.ibc.connection.QueryConnectionsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ibc.connection.QueryClientConnectionsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ibc.connection.QueryClientConnectionsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ibc.connection.QueryClientConnectionsRequest.displayName = 'proto.ibc.connection.QueryClientConnectionsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ibc.connection.QueryClientConnectionsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ibc.connection.QueryClientConnectionsResponse.repeatedFields_, null);
};
goog.inherits(proto.ibc.connection.QueryClientConnectionsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ibc.connection.QueryClientConnectionsResponse.displayName = 'proto.ibc.connection.QueryClientConnectionsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ibc.connection.QueryConnectionClientStateRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ibc.connection.QueryConnectionClientStateRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ibc.connection.QueryConnectionClientStateRequest.displayName = 'proto.ibc.connection.QueryConnectionClientStateRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ibc.connection.QueryConnectionClientStateResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ibc.connection.QueryConnectionClientStateResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ibc.connection.QueryConnectionClientStateResponse.displayName = 'proto.ibc.connection.QueryConnectionClientStateResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ibc.connection.QueryConnectionConsensusStateRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ibc.connection.QueryConnectionConsensusStateRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ibc.connection.QueryConnectionConsensusStateRequest.displayName = 'proto.ibc.connection.QueryConnectionConsensusStateRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ibc.connection.QueryConnectionConsensusStateResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ibc.connection.QueryConnectionConsensusStateResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ibc.connection.QueryConnectionConsensusStateResponse.displayName = 'proto.ibc.connection.QueryConnectionConsensusStateResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ibc.connection.QueryConnectionRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ibc.connection.QueryConnectionRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ibc.connection.QueryConnectionRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ibc.connection.QueryConnectionRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    connectionId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ibc.connection.QueryConnectionRequest}
 */
proto.ibc.connection.QueryConnectionRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ibc.connection.QueryConnectionRequest;
  return proto.ibc.connection.QueryConnectionRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ibc.connection.QueryConnectionRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ibc.connection.QueryConnectionRequest}
 */
proto.ibc.connection.QueryConnectionRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setConnectionId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ibc.connection.QueryConnectionRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ibc.connection.QueryConnectionRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ibc.connection.QueryConnectionRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ibc.connection.QueryConnectionRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConnectionId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string connection_id = 1;
 * @return {string}
 */
proto.ibc.connection.QueryConnectionRequest.prototype.getConnectionId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ibc.connection.QueryConnectionRequest} returns this
 */
proto.ibc.connection.QueryConnectionRequest.prototype.setConnectionId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ibc.connection.QueryConnectionResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.ibc.connection.QueryConnectionResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ibc.connection.QueryConnectionResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ibc.connection.QueryConnectionResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    connection: (f = msg.getConnection()) && ibc_connection_connection_pb.ConnectionEnd.toObject(includeInstance, f),
    proof: msg.getProof_asB64(),
    proofPath: jspb.Message.getFieldWithDefault(msg, 3, ""),
    proofHeight: (f = msg.getProofHeight()) && ibc_client_client_pb.Height.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ibc.connection.QueryConnectionResponse}
 */
proto.ibc.connection.QueryConnectionResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ibc.connection.QueryConnectionResponse;
  return proto.ibc.connection.QueryConnectionResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ibc.connection.QueryConnectionResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ibc.connection.QueryConnectionResponse}
 */
proto.ibc.connection.QueryConnectionResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new ibc_connection_connection_pb.ConnectionEnd;
      reader.readMessage(value,ibc_connection_connection_pb.ConnectionEnd.deserializeBinaryFromReader);
      msg.setConnection(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setProof(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setProofPath(value);
      break;
    case 4:
      var value = new ibc_client_client_pb.Height;
      reader.readMessage(value,ibc_client_client_pb.Height.deserializeBinaryFromReader);
      msg.setProofHeight(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ibc.connection.QueryConnectionResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ibc.connection.QueryConnectionResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ibc.connection.QueryConnectionResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ibc.connection.QueryConnectionResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConnection();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      ibc_connection_connection_pb.ConnectionEnd.serializeBinaryToWriter
    );
  }
  f = message.getProof_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
  f = message.getProofPath();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getProofHeight();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      ibc_client_client_pb.Height.serializeBinaryToWriter
    );
  }
};


/**
 * optional ConnectionEnd connection = 1;
 * @return {?proto.ibc.connection.ConnectionEnd}
 */
proto.ibc.connection.QueryConnectionResponse.prototype.getConnection = function() {
  return /** @type{?proto.ibc.connection.ConnectionEnd} */ (
    jspb.Message.getWrapperField(this, ibc_connection_connection_pb.ConnectionEnd, 1));
};


/**
 * @param {?proto.ibc.connection.ConnectionEnd|undefined} value
 * @return {!proto.ibc.connection.QueryConnectionResponse} returns this
*/
proto.ibc.connection.QueryConnectionResponse.prototype.setConnection = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ibc.connection.QueryConnectionResponse} returns this
 */
proto.ibc.connection.QueryConnectionResponse.prototype.clearConnection = function() {
  return this.setConnection(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ibc.connection.QueryConnectionResponse.prototype.hasConnection = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional bytes proof = 2;
 * @return {!(string|Uint8Array)}
 */
proto.ibc.connection.QueryConnectionResponse.prototype.getProof = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes proof = 2;
 * This is a type-conversion wrapper around `getProof()`
 * @return {string}
 */
proto.ibc.connection.QueryConnectionResponse.prototype.getProof_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getProof()));
};


/**
 * optional bytes proof = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getProof()`
 * @return {!Uint8Array}
 */
proto.ibc.connection.QueryConnectionResponse.prototype.getProof_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getProof()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.ibc.connection.QueryConnectionResponse} returns this
 */
proto.ibc.connection.QueryConnectionResponse.prototype.setProof = function(value) {
  return jspb.Message.setProto3BytesField(this, 2, value);
};


/**
 * optional string proof_path = 3;
 * @return {string}
 */
proto.ibc.connection.QueryConnectionResponse.prototype.getProofPath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.ibc.connection.QueryConnectionResponse} returns this
 */
proto.ibc.connection.QueryConnectionResponse.prototype.setProofPath = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional ibc.client.Height proof_height = 4;
 * @return {?proto.ibc.client.Height}
 */
proto.ibc.connection.QueryConnectionResponse.prototype.getProofHeight = function() {
  return /** @type{?proto.ibc.client.Height} */ (
    jspb.Message.getWrapperField(this, ibc_client_client_pb.Height, 4));
};


/**
 * @param {?proto.ibc.client.Height|undefined} value
 * @return {!proto.ibc.connection.QueryConnectionResponse} returns this
*/
proto.ibc.connection.QueryConnectionResponse.prototype.setProofHeight = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ibc.connection.QueryConnectionResponse} returns this
 */
proto.ibc.connection.QueryConnectionResponse.prototype.clearProofHeight = function() {
  return this.setProofHeight(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ibc.connection.QueryConnectionResponse.prototype.hasProofHeight = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ibc.connection.QueryConnectionsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ibc.connection.QueryConnectionsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ibc.connection.QueryConnectionsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ibc.connection.QueryConnectionsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    pagination: (f = msg.getPagination()) && cosmos_base_query_v1beta1_pagination_pb.PageRequest.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ibc.connection.QueryConnectionsRequest}
 */
proto.ibc.connection.QueryConnectionsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ibc.connection.QueryConnectionsRequest;
  return proto.ibc.connection.QueryConnectionsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ibc.connection.QueryConnectionsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ibc.connection.QueryConnectionsRequest}
 */
proto.ibc.connection.QueryConnectionsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new cosmos_base_query_v1beta1_pagination_pb.PageRequest;
      reader.readMessage(value,cosmos_base_query_v1beta1_pagination_pb.PageRequest.deserializeBinaryFromReader);
      msg.setPagination(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ibc.connection.QueryConnectionsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ibc.connection.QueryConnectionsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ibc.connection.QueryConnectionsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ibc.connection.QueryConnectionsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPagination();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      cosmos_base_query_v1beta1_pagination_pb.PageRequest.serializeBinaryToWriter
    );
  }
};


/**
 * optional cosmos.base.query.v1beta1.PageRequest pagination = 1;
 * @return {?proto.cosmos.base.query.v1beta1.PageRequest}
 */
proto.ibc.connection.QueryConnectionsRequest.prototype.getPagination = function() {
  return /** @type{?proto.cosmos.base.query.v1beta1.PageRequest} */ (
    jspb.Message.getWrapperField(this, cosmos_base_query_v1beta1_pagination_pb.PageRequest, 1));
};


/**
 * @param {?proto.cosmos.base.query.v1beta1.PageRequest|undefined} value
 * @return {!proto.ibc.connection.QueryConnectionsRequest} returns this
*/
proto.ibc.connection.QueryConnectionsRequest.prototype.setPagination = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ibc.connection.QueryConnectionsRequest} returns this
 */
proto.ibc.connection.QueryConnectionsRequest.prototype.clearPagination = function() {
  return this.setPagination(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ibc.connection.QueryConnectionsRequest.prototype.hasPagination = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ibc.connection.QueryConnectionsResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ibc.connection.QueryConnectionsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.ibc.connection.QueryConnectionsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ibc.connection.QueryConnectionsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ibc.connection.QueryConnectionsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    connectionsList: jspb.Message.toObjectList(msg.getConnectionsList(),
    ibc_connection_connection_pb.IdentifiedConnection.toObject, includeInstance),
    pagination: (f = msg.getPagination()) && cosmos_base_query_v1beta1_pagination_pb.PageResponse.toObject(includeInstance, f),
    height: (f = msg.getHeight()) && ibc_client_client_pb.Height.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ibc.connection.QueryConnectionsResponse}
 */
proto.ibc.connection.QueryConnectionsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ibc.connection.QueryConnectionsResponse;
  return proto.ibc.connection.QueryConnectionsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ibc.connection.QueryConnectionsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ibc.connection.QueryConnectionsResponse}
 */
proto.ibc.connection.QueryConnectionsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new ibc_connection_connection_pb.IdentifiedConnection;
      reader.readMessage(value,ibc_connection_connection_pb.IdentifiedConnection.deserializeBinaryFromReader);
      msg.addConnections(value);
      break;
    case 2:
      var value = new cosmos_base_query_v1beta1_pagination_pb.PageResponse;
      reader.readMessage(value,cosmos_base_query_v1beta1_pagination_pb.PageResponse.deserializeBinaryFromReader);
      msg.setPagination(value);
      break;
    case 3:
      var value = new ibc_client_client_pb.Height;
      reader.readMessage(value,ibc_client_client_pb.Height.deserializeBinaryFromReader);
      msg.setHeight(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ibc.connection.QueryConnectionsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ibc.connection.QueryConnectionsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ibc.connection.QueryConnectionsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ibc.connection.QueryConnectionsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConnectionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      ibc_connection_connection_pb.IdentifiedConnection.serializeBinaryToWriter
    );
  }
  f = message.getPagination();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      cosmos_base_query_v1beta1_pagination_pb.PageResponse.serializeBinaryToWriter
    );
  }
  f = message.getHeight();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      ibc_client_client_pb.Height.serializeBinaryToWriter
    );
  }
};


/**
 * repeated IdentifiedConnection connections = 1;
 * @return {!Array<!proto.ibc.connection.IdentifiedConnection>}
 */
proto.ibc.connection.QueryConnectionsResponse.prototype.getConnectionsList = function() {
  return /** @type{!Array<!proto.ibc.connection.IdentifiedConnection>} */ (
    jspb.Message.getRepeatedWrapperField(this, ibc_connection_connection_pb.IdentifiedConnection, 1));
};


/**
 * @param {!Array<!proto.ibc.connection.IdentifiedConnection>} value
 * @return {!proto.ibc.connection.QueryConnectionsResponse} returns this
*/
proto.ibc.connection.QueryConnectionsResponse.prototype.setConnectionsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.ibc.connection.IdentifiedConnection=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ibc.connection.IdentifiedConnection}
 */
proto.ibc.connection.QueryConnectionsResponse.prototype.addConnections = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.ibc.connection.IdentifiedConnection, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ibc.connection.QueryConnectionsResponse} returns this
 */
proto.ibc.connection.QueryConnectionsResponse.prototype.clearConnectionsList = function() {
  return this.setConnectionsList([]);
};


/**
 * optional cosmos.base.query.v1beta1.PageResponse pagination = 2;
 * @return {?proto.cosmos.base.query.v1beta1.PageResponse}
 */
proto.ibc.connection.QueryConnectionsResponse.prototype.getPagination = function() {
  return /** @type{?proto.cosmos.base.query.v1beta1.PageResponse} */ (
    jspb.Message.getWrapperField(this, cosmos_base_query_v1beta1_pagination_pb.PageResponse, 2));
};


/**
 * @param {?proto.cosmos.base.query.v1beta1.PageResponse|undefined} value
 * @return {!proto.ibc.connection.QueryConnectionsResponse} returns this
*/
proto.ibc.connection.QueryConnectionsResponse.prototype.setPagination = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ibc.connection.QueryConnectionsResponse} returns this
 */
proto.ibc.connection.QueryConnectionsResponse.prototype.clearPagination = function() {
  return this.setPagination(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ibc.connection.QueryConnectionsResponse.prototype.hasPagination = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional ibc.client.Height height = 3;
 * @return {?proto.ibc.client.Height}
 */
proto.ibc.connection.QueryConnectionsResponse.prototype.getHeight = function() {
  return /** @type{?proto.ibc.client.Height} */ (
    jspb.Message.getWrapperField(this, ibc_client_client_pb.Height, 3));
};


/**
 * @param {?proto.ibc.client.Height|undefined} value
 * @return {!proto.ibc.connection.QueryConnectionsResponse} returns this
*/
proto.ibc.connection.QueryConnectionsResponse.prototype.setHeight = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ibc.connection.QueryConnectionsResponse} returns this
 */
proto.ibc.connection.QueryConnectionsResponse.prototype.clearHeight = function() {
  return this.setHeight(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ibc.connection.QueryConnectionsResponse.prototype.hasHeight = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ibc.connection.QueryClientConnectionsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ibc.connection.QueryClientConnectionsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ibc.connection.QueryClientConnectionsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ibc.connection.QueryClientConnectionsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    clientId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ibc.connection.QueryClientConnectionsRequest}
 */
proto.ibc.connection.QueryClientConnectionsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ibc.connection.QueryClientConnectionsRequest;
  return proto.ibc.connection.QueryClientConnectionsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ibc.connection.QueryClientConnectionsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ibc.connection.QueryClientConnectionsRequest}
 */
proto.ibc.connection.QueryClientConnectionsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ibc.connection.QueryClientConnectionsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ibc.connection.QueryClientConnectionsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ibc.connection.QueryClientConnectionsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ibc.connection.QueryClientConnectionsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getClientId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string client_id = 1;
 * @return {string}
 */
proto.ibc.connection.QueryClientConnectionsRequest.prototype.getClientId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ibc.connection.QueryClientConnectionsRequest} returns this
 */
proto.ibc.connection.QueryClientConnectionsRequest.prototype.setClientId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ibc.connection.QueryClientConnectionsResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ibc.connection.QueryClientConnectionsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.ibc.connection.QueryClientConnectionsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ibc.connection.QueryClientConnectionsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ibc.connection.QueryClientConnectionsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    connectionPathsList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,
    proof: msg.getProof_asB64(),
    proofPath: jspb.Message.getFieldWithDefault(msg, 3, ""),
    proofHeight: (f = msg.getProofHeight()) && ibc_client_client_pb.Height.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ibc.connection.QueryClientConnectionsResponse}
 */
proto.ibc.connection.QueryClientConnectionsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ibc.connection.QueryClientConnectionsResponse;
  return proto.ibc.connection.QueryClientConnectionsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ibc.connection.QueryClientConnectionsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ibc.connection.QueryClientConnectionsResponse}
 */
proto.ibc.connection.QueryClientConnectionsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addConnectionPaths(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setProof(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setProofPath(value);
      break;
    case 4:
      var value = new ibc_client_client_pb.Height;
      reader.readMessage(value,ibc_client_client_pb.Height.deserializeBinaryFromReader);
      msg.setProofHeight(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ibc.connection.QueryClientConnectionsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ibc.connection.QueryClientConnectionsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ibc.connection.QueryClientConnectionsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ibc.connection.QueryClientConnectionsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConnectionPathsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
  f = message.getProof_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
  f = message.getProofPath();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getProofHeight();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      ibc_client_client_pb.Height.serializeBinaryToWriter
    );
  }
};


/**
 * repeated string connection_paths = 1;
 * @return {!Array<string>}
 */
proto.ibc.connection.QueryClientConnectionsResponse.prototype.getConnectionPathsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.ibc.connection.QueryClientConnectionsResponse} returns this
 */
proto.ibc.connection.QueryClientConnectionsResponse.prototype.setConnectionPathsList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.ibc.connection.QueryClientConnectionsResponse} returns this
 */
proto.ibc.connection.QueryClientConnectionsResponse.prototype.addConnectionPaths = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ibc.connection.QueryClientConnectionsResponse} returns this
 */
proto.ibc.connection.QueryClientConnectionsResponse.prototype.clearConnectionPathsList = function() {
  return this.setConnectionPathsList([]);
};


/**
 * optional bytes proof = 2;
 * @return {!(string|Uint8Array)}
 */
proto.ibc.connection.QueryClientConnectionsResponse.prototype.getProof = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes proof = 2;
 * This is a type-conversion wrapper around `getProof()`
 * @return {string}
 */
proto.ibc.connection.QueryClientConnectionsResponse.prototype.getProof_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getProof()));
};


/**
 * optional bytes proof = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getProof()`
 * @return {!Uint8Array}
 */
proto.ibc.connection.QueryClientConnectionsResponse.prototype.getProof_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getProof()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.ibc.connection.QueryClientConnectionsResponse} returns this
 */
proto.ibc.connection.QueryClientConnectionsResponse.prototype.setProof = function(value) {
  return jspb.Message.setProto3BytesField(this, 2, value);
};


/**
 * optional string proof_path = 3;
 * @return {string}
 */
proto.ibc.connection.QueryClientConnectionsResponse.prototype.getProofPath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.ibc.connection.QueryClientConnectionsResponse} returns this
 */
proto.ibc.connection.QueryClientConnectionsResponse.prototype.setProofPath = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional ibc.client.Height proof_height = 4;
 * @return {?proto.ibc.client.Height}
 */
proto.ibc.connection.QueryClientConnectionsResponse.prototype.getProofHeight = function() {
  return /** @type{?proto.ibc.client.Height} */ (
    jspb.Message.getWrapperField(this, ibc_client_client_pb.Height, 4));
};


/**
 * @param {?proto.ibc.client.Height|undefined} value
 * @return {!proto.ibc.connection.QueryClientConnectionsResponse} returns this
*/
proto.ibc.connection.QueryClientConnectionsResponse.prototype.setProofHeight = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ibc.connection.QueryClientConnectionsResponse} returns this
 */
proto.ibc.connection.QueryClientConnectionsResponse.prototype.clearProofHeight = function() {
  return this.setProofHeight(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ibc.connection.QueryClientConnectionsResponse.prototype.hasProofHeight = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ibc.connection.QueryConnectionClientStateRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ibc.connection.QueryConnectionClientStateRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ibc.connection.QueryConnectionClientStateRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ibc.connection.QueryConnectionClientStateRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    connectionId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ibc.connection.QueryConnectionClientStateRequest}
 */
proto.ibc.connection.QueryConnectionClientStateRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ibc.connection.QueryConnectionClientStateRequest;
  return proto.ibc.connection.QueryConnectionClientStateRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ibc.connection.QueryConnectionClientStateRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ibc.connection.QueryConnectionClientStateRequest}
 */
proto.ibc.connection.QueryConnectionClientStateRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setConnectionId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ibc.connection.QueryConnectionClientStateRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ibc.connection.QueryConnectionClientStateRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ibc.connection.QueryConnectionClientStateRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ibc.connection.QueryConnectionClientStateRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConnectionId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string connection_id = 1;
 * @return {string}
 */
proto.ibc.connection.QueryConnectionClientStateRequest.prototype.getConnectionId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ibc.connection.QueryConnectionClientStateRequest} returns this
 */
proto.ibc.connection.QueryConnectionClientStateRequest.prototype.setConnectionId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ibc.connection.QueryConnectionClientStateResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.ibc.connection.QueryConnectionClientStateResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ibc.connection.QueryConnectionClientStateResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ibc.connection.QueryConnectionClientStateResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    identifiedClientState: (f = msg.getIdentifiedClientState()) && ibc_client_client_pb.IdentifiedClientState.toObject(includeInstance, f),
    proof: msg.getProof_asB64(),
    proofPath: jspb.Message.getFieldWithDefault(msg, 3, ""),
    proofHeight: (f = msg.getProofHeight()) && ibc_client_client_pb.Height.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ibc.connection.QueryConnectionClientStateResponse}
 */
proto.ibc.connection.QueryConnectionClientStateResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ibc.connection.QueryConnectionClientStateResponse;
  return proto.ibc.connection.QueryConnectionClientStateResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ibc.connection.QueryConnectionClientStateResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ibc.connection.QueryConnectionClientStateResponse}
 */
proto.ibc.connection.QueryConnectionClientStateResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new ibc_client_client_pb.IdentifiedClientState;
      reader.readMessage(value,ibc_client_client_pb.IdentifiedClientState.deserializeBinaryFromReader);
      msg.setIdentifiedClientState(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setProof(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setProofPath(value);
      break;
    case 4:
      var value = new ibc_client_client_pb.Height;
      reader.readMessage(value,ibc_client_client_pb.Height.deserializeBinaryFromReader);
      msg.setProofHeight(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ibc.connection.QueryConnectionClientStateResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ibc.connection.QueryConnectionClientStateResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ibc.connection.QueryConnectionClientStateResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ibc.connection.QueryConnectionClientStateResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIdentifiedClientState();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      ibc_client_client_pb.IdentifiedClientState.serializeBinaryToWriter
    );
  }
  f = message.getProof_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
  f = message.getProofPath();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getProofHeight();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      ibc_client_client_pb.Height.serializeBinaryToWriter
    );
  }
};


/**
 * optional ibc.client.IdentifiedClientState identified_client_state = 1;
 * @return {?proto.ibc.client.IdentifiedClientState}
 */
proto.ibc.connection.QueryConnectionClientStateResponse.prototype.getIdentifiedClientState = function() {
  return /** @type{?proto.ibc.client.IdentifiedClientState} */ (
    jspb.Message.getWrapperField(this, ibc_client_client_pb.IdentifiedClientState, 1));
};


/**
 * @param {?proto.ibc.client.IdentifiedClientState|undefined} value
 * @return {!proto.ibc.connection.QueryConnectionClientStateResponse} returns this
*/
proto.ibc.connection.QueryConnectionClientStateResponse.prototype.setIdentifiedClientState = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ibc.connection.QueryConnectionClientStateResponse} returns this
 */
proto.ibc.connection.QueryConnectionClientStateResponse.prototype.clearIdentifiedClientState = function() {
  return this.setIdentifiedClientState(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ibc.connection.QueryConnectionClientStateResponse.prototype.hasIdentifiedClientState = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional bytes proof = 2;
 * @return {!(string|Uint8Array)}
 */
proto.ibc.connection.QueryConnectionClientStateResponse.prototype.getProof = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes proof = 2;
 * This is a type-conversion wrapper around `getProof()`
 * @return {string}
 */
proto.ibc.connection.QueryConnectionClientStateResponse.prototype.getProof_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getProof()));
};


/**
 * optional bytes proof = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getProof()`
 * @return {!Uint8Array}
 */
proto.ibc.connection.QueryConnectionClientStateResponse.prototype.getProof_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getProof()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.ibc.connection.QueryConnectionClientStateResponse} returns this
 */
proto.ibc.connection.QueryConnectionClientStateResponse.prototype.setProof = function(value) {
  return jspb.Message.setProto3BytesField(this, 2, value);
};


/**
 * optional string proof_path = 3;
 * @return {string}
 */
proto.ibc.connection.QueryConnectionClientStateResponse.prototype.getProofPath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.ibc.connection.QueryConnectionClientStateResponse} returns this
 */
proto.ibc.connection.QueryConnectionClientStateResponse.prototype.setProofPath = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional ibc.client.Height proof_height = 4;
 * @return {?proto.ibc.client.Height}
 */
proto.ibc.connection.QueryConnectionClientStateResponse.prototype.getProofHeight = function() {
  return /** @type{?proto.ibc.client.Height} */ (
    jspb.Message.getWrapperField(this, ibc_client_client_pb.Height, 4));
};


/**
 * @param {?proto.ibc.client.Height|undefined} value
 * @return {!proto.ibc.connection.QueryConnectionClientStateResponse} returns this
*/
proto.ibc.connection.QueryConnectionClientStateResponse.prototype.setProofHeight = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ibc.connection.QueryConnectionClientStateResponse} returns this
 */
proto.ibc.connection.QueryConnectionClientStateResponse.prototype.clearProofHeight = function() {
  return this.setProofHeight(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ibc.connection.QueryConnectionClientStateResponse.prototype.hasProofHeight = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ibc.connection.QueryConnectionConsensusStateRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ibc.connection.QueryConnectionConsensusStateRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ibc.connection.QueryConnectionConsensusStateRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ibc.connection.QueryConnectionConsensusStateRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    connectionId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    epochNumber: jspb.Message.getFieldWithDefault(msg, 2, 0),
    epochHeight: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ibc.connection.QueryConnectionConsensusStateRequest}
 */
proto.ibc.connection.QueryConnectionConsensusStateRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ibc.connection.QueryConnectionConsensusStateRequest;
  return proto.ibc.connection.QueryConnectionConsensusStateRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ibc.connection.QueryConnectionConsensusStateRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ibc.connection.QueryConnectionConsensusStateRequest}
 */
proto.ibc.connection.QueryConnectionConsensusStateRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setConnectionId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setEpochNumber(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setEpochHeight(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ibc.connection.QueryConnectionConsensusStateRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ibc.connection.QueryConnectionConsensusStateRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ibc.connection.QueryConnectionConsensusStateRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ibc.connection.QueryConnectionConsensusStateRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConnectionId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getEpochNumber();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getEpochHeight();
  if (f !== 0) {
    writer.writeUint64(
      3,
      f
    );
  }
};


/**
 * optional string connection_id = 1;
 * @return {string}
 */
proto.ibc.connection.QueryConnectionConsensusStateRequest.prototype.getConnectionId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ibc.connection.QueryConnectionConsensusStateRequest} returns this
 */
proto.ibc.connection.QueryConnectionConsensusStateRequest.prototype.setConnectionId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional uint64 epoch_number = 2;
 * @return {number}
 */
proto.ibc.connection.QueryConnectionConsensusStateRequest.prototype.getEpochNumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.ibc.connection.QueryConnectionConsensusStateRequest} returns this
 */
proto.ibc.connection.QueryConnectionConsensusStateRequest.prototype.setEpochNumber = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint64 epoch_height = 3;
 * @return {number}
 */
proto.ibc.connection.QueryConnectionConsensusStateRequest.prototype.getEpochHeight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.ibc.connection.QueryConnectionConsensusStateRequest} returns this
 */
proto.ibc.connection.QueryConnectionConsensusStateRequest.prototype.setEpochHeight = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ibc.connection.QueryConnectionConsensusStateResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.ibc.connection.QueryConnectionConsensusStateResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ibc.connection.QueryConnectionConsensusStateResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ibc.connection.QueryConnectionConsensusStateResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    consensusState: (f = msg.getConsensusState()) && google_protobuf_any_pb.Any.toObject(includeInstance, f),
    clientId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    proof: msg.getProof_asB64(),
    proofPath: jspb.Message.getFieldWithDefault(msg, 4, ""),
    proofHeight: (f = msg.getProofHeight()) && ibc_client_client_pb.Height.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ibc.connection.QueryConnectionConsensusStateResponse}
 */
proto.ibc.connection.QueryConnectionConsensusStateResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ibc.connection.QueryConnectionConsensusStateResponse;
  return proto.ibc.connection.QueryConnectionConsensusStateResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ibc.connection.QueryConnectionConsensusStateResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ibc.connection.QueryConnectionConsensusStateResponse}
 */
proto.ibc.connection.QueryConnectionConsensusStateResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_any_pb.Any;
      reader.readMessage(value,google_protobuf_any_pb.Any.deserializeBinaryFromReader);
      msg.setConsensusState(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientId(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setProof(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setProofPath(value);
      break;
    case 5:
      var value = new ibc_client_client_pb.Height;
      reader.readMessage(value,ibc_client_client_pb.Height.deserializeBinaryFromReader);
      msg.setProofHeight(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ibc.connection.QueryConnectionConsensusStateResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ibc.connection.QueryConnectionConsensusStateResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ibc.connection.QueryConnectionConsensusStateResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ibc.connection.QueryConnectionConsensusStateResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConsensusState();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_any_pb.Any.serializeBinaryToWriter
    );
  }
  f = message.getClientId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getProof_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      3,
      f
    );
  }
  f = message.getProofPath();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getProofHeight();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      ibc_client_client_pb.Height.serializeBinaryToWriter
    );
  }
};


/**
 * optional google.protobuf.Any consensus_state = 1;
 * @return {?proto.google.protobuf.Any}
 */
proto.ibc.connection.QueryConnectionConsensusStateResponse.prototype.getConsensusState = function() {
  return /** @type{?proto.google.protobuf.Any} */ (
    jspb.Message.getWrapperField(this, google_protobuf_any_pb.Any, 1));
};


/**
 * @param {?proto.google.protobuf.Any|undefined} value
 * @return {!proto.ibc.connection.QueryConnectionConsensusStateResponse} returns this
*/
proto.ibc.connection.QueryConnectionConsensusStateResponse.prototype.setConsensusState = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ibc.connection.QueryConnectionConsensusStateResponse} returns this
 */
proto.ibc.connection.QueryConnectionConsensusStateResponse.prototype.clearConsensusState = function() {
  return this.setConsensusState(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ibc.connection.QueryConnectionConsensusStateResponse.prototype.hasConsensusState = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string client_id = 2;
 * @return {string}
 */
proto.ibc.connection.QueryConnectionConsensusStateResponse.prototype.getClientId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ibc.connection.QueryConnectionConsensusStateResponse} returns this
 */
proto.ibc.connection.QueryConnectionConsensusStateResponse.prototype.setClientId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional bytes proof = 3;
 * @return {!(string|Uint8Array)}
 */
proto.ibc.connection.QueryConnectionConsensusStateResponse.prototype.getProof = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes proof = 3;
 * This is a type-conversion wrapper around `getProof()`
 * @return {string}
 */
proto.ibc.connection.QueryConnectionConsensusStateResponse.prototype.getProof_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getProof()));
};


/**
 * optional bytes proof = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getProof()`
 * @return {!Uint8Array}
 */
proto.ibc.connection.QueryConnectionConsensusStateResponse.prototype.getProof_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getProof()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.ibc.connection.QueryConnectionConsensusStateResponse} returns this
 */
proto.ibc.connection.QueryConnectionConsensusStateResponse.prototype.setProof = function(value) {
  return jspb.Message.setProto3BytesField(this, 3, value);
};


/**
 * optional string proof_path = 4;
 * @return {string}
 */
proto.ibc.connection.QueryConnectionConsensusStateResponse.prototype.getProofPath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.ibc.connection.QueryConnectionConsensusStateResponse} returns this
 */
proto.ibc.connection.QueryConnectionConsensusStateResponse.prototype.setProofPath = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional ibc.client.Height proof_height = 5;
 * @return {?proto.ibc.client.Height}
 */
proto.ibc.connection.QueryConnectionConsensusStateResponse.prototype.getProofHeight = function() {
  return /** @type{?proto.ibc.client.Height} */ (
    jspb.Message.getWrapperField(this, ibc_client_client_pb.Height, 5));
};


/**
 * @param {?proto.ibc.client.Height|undefined} value
 * @return {!proto.ibc.connection.QueryConnectionConsensusStateResponse} returns this
*/
proto.ibc.connection.QueryConnectionConsensusStateResponse.prototype.setProofHeight = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ibc.connection.QueryConnectionConsensusStateResponse} returns this
 */
proto.ibc.connection.QueryConnectionConsensusStateResponse.prototype.clearProofHeight = function() {
  return this.setProofHeight(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ibc.connection.QueryConnectionConsensusStateResponse.prototype.hasProofHeight = function() {
  return jspb.Message.getField(this, 5) != null;
};


goog.object.extend(exports, proto.ibc.connection);
